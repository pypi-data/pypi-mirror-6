0.7.1.1

- Add possibility of GoGrid node RAM printing using
  %(ram)s format string

- Decode format string using 'string-escape'

0.7.1.0

- Allow setting current profile not only via '-p'
  option but via LC_PROFILE environment variable also

- Make lc-node-do process all nodes that were specified in
  '-i' instead of failing on the first non-existing one

0.5.0.0

- Implemented lb-* scripts to work with load balancers
- Fix imports for libcloud version 0.5.x
- Switch to new version numbering: new scheme is:

   $libcloud_version.$lctools_version

  Where libcloud_version is the version of libcloud
  which was used for lctools's current version development
  and testing. And lctools_version is a numeric lctools version.

0.1.5

- Added tool to list GoGrid IP addresses: lc-gg-ip-list:

      lc-gg-ip-list # lists all ips for account
      lc-gg-ip-list -a false -u true # lists public \
                                # unassigned ips

- lc-node-add nows accepts 'ip' arg for GoGrid with the IP
  to use for a node, like:

      lc-node-add ..... ip=10.0.0.1 # where 10.0.0.1 is  \
		# an ip you want to assign to node

- Added tool to edit GoGrid images: lc-gg-image-edit.
  Brief info on usage:

      lc-gg-image-edit -i <image_id> -t true \
                -n new_name -d new_descr

  Here, "-t true" tells that given image should be
  public (i.e. visible to all GoGrid users),
  "-n new_name" and "-d new_descr" update image name
  and description respectively.

0.1.4

- Added tools for controlling Rackspace shared
  IP groups: lc-rs-ip-group-list and
  lc-rs-ip-group-do

- Added config file option for SSL certs verification.
  Please add the following to the profile for which
  you want to enabe verification:

     verify_ssl_certs = true

  By default it's disabled.

- Added GoGrid specific script: lc-gg-node-edit
  which allows to change node's amount of RAM
  and description. Sample:

     lc-gg-node-edit -i <node_id> -s <new_size>

- Added ranges support for lc-node-do's -i arg, i.e.
  if previosuly to remove nodes with ids like
  1001, 1002, 1003 you had to issue command like:

     for node in 1001 1002 1003; do \
          lc-node-do -i ${node} destroy; done

  now you just do: lc-node-do -i 1001,1002,1003 destroy
  or even: lc-node-do -i 1001-1003 destroy

- Refuse to work if config file permissons are loose
