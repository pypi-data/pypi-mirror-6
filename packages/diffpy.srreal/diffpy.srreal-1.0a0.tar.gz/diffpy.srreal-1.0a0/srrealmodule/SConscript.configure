Import('env', 'pyconfigvar')

# Helper functions -----------------------------------------------------------

boostlibtags = ['', '-mt']
def configure_boost_library(libname):
    '''Add a boost library to the configured environment allowing for any
    of the boostlibtags name extensions.

    libname  -- boost library name without any extension

    Note: CheckLib function automatically adds library to the environment.
    '''
    # using global conf defined below
    for t in boostlibtags:
        libnamefull = libname + t
        if conf.CheckLib(libnamefull, language='C++'):
            boostlibtags[:] = [t]
            return
    # library not found here
    print('This program requires %r library' % libname)
    Exit(1)

# Start configuration --------------------------------------------------------

# Temporarily link with Python shared_library so that the check
# for boost_python does not fail due to unresolved Python symbols.
save_linkflags = env['LINKFLAGS']
env.Prepend(LINKFLAGS=pyconfigvar('BLDLIBRARY'))

conf = Configure(env)
configure_boost_library('boost_python')
env = conf.Finish()

# Restore the original LINKFLAGS.
env.Replace(LINKFLAGS=save_linkflags)

# vim: ft=python
