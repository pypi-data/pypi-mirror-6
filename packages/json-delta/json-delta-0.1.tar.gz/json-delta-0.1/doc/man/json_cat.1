.TH "JSON_CAT" "1" "April 15, 2014" "0.1" "JSON-delta"
.SH NAME
json_cat \- concatenate files into a JSON array
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.\" Man page generated from reStructeredText.
.
.SH SYNOPSIS
.sp
.nf
.ft C
json_cat [FILE]...
.ft P
.fi
.SH DESCRIPTION
.sp
Concatenate FILE(s), or standard input together and write them to
standard output as a JSON array.
.sp
Input streams are parsed as JSON if possible, otherwise they are added
to the array as strings.
.SH EXAMPLES
.sp
.nf
.ft C
$ echo \(aq{"foo": true, "bar": false,
>        "baz": null}\(aq > foofile
$ json_cat foofile \- << \(aqEOF\(aq
> This text cannot be parsed as JSON.
> EOF
[{"foo": true, "bar": false, "baz": null}, "This text cannot be parsed as JSON."]
$ echo \(aqYou can use json_cat to create 1\-element JSON arrays of text,
> if that\(aq\e\(aq\(aqs something you like to do...\(aq | json_cat
["You can use json_cat to create 1\-element JSON arrays of text, if that\(aqs something you like to do..."]
.ft P
.fi
.SH AUTHOR
Philip J. Roberts
.SH COPYRIGHT
2014, Philip J. Roberts
.\" Generated by docutils manpage writer.
.\" 
.
