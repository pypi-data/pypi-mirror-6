This package contains several programs for beginners which include
as sources and binaries.

Programs available here are:

Operation with files:
fileOperations .... program demonstrates how to operated with files.
Including read and writing operations

basic_class ... is the simple program which demostrates how to create simple class in C++.

=== How to add new C++ file to project ===
Here is described guide how to add new C++ file to automake tools.

Let's say that we have added into project directory 
file named my_test.cpp. To be sure that file is compile free we need to add them into
automake tools.

Let's say that my_test.cpp includes openssl/ssl.h

Steps for compilation and making binaries are following:
1) Go to you project name directory named by option -n
2) Update file Makefile.am so that we will add binary name at the end into bin_PROGRAMS like
     bin_PROGRAMS = <actuall_binaries> my_test
3) Next step is to tell autotools build my my_test.cpp file. It is done so that
new row has to be added in Makefile.am
     my_test_SOURCES = my_test.cpp
4) If your program depends on some library like libssl then call devassistant with those parameters
    da mod c lib -l libssl -f <function_from_libssl> -p <path_to_your_project>
  and during compilation your program will be build with this library
5) If you would like to add check whether some header is on target system call devassistant 
    with those parameters
    da mod c header --header <your_header.h> -p <path_to_your_project>

6) When project is buildable and no errors occurs then you can add you binary
    to RPM so that you will modify <project_name>.spec file stored in your project name directory
    In that file add your directory in %install section so that new row will be add like:

    install -p -m 755 -D src/my_test ${RPM_BUILD_ROOT}%{_bindir}/my_test

    Also it is needed to mentioned that file in %files section so that new row
    will be added there like

    %{_bindir}/my_test

7) Update also changelog section so that Package Guidelines will be clear

8) For building RPM package leave your project name directory and run command

    da crt c cpp -n <your_project_name> -b 
