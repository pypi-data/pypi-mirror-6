Metadata-Version: 1.1
Name: interpy
Version: 1.1
Summary: Interpy extends Python to support Ruby like string interpolation #{}.
Home-page: http://github.com/syrusakbary/interpy
Author: Syrus Akbary
Author-email: me@syrusakbary.com
License: MIT
Download-URL: git@github.com:syrusakbary/interpy.git
Description: Interpy = Python String Interpolation
        =====================================
        
        Interpy **extends Python** to support *Ruby like* string interpolation
        **#{}**. Quick example: ``print "Hello #{your_name}"``
        
        It is **hightly optimized**, and directly compiled to bytecode, so you
        will have the same Python speed when using it.
        
        Installation
        ------------
        
        The installation of this package is quite simple, you only have to run
        ``pip install interpy``.
        
        Usage
        -----
        
        All python files with string interpolation must have the following first
        line
        
        .. code:: python
        
            # coding: interpy
        
        Example:
        
        .. code:: python
        
            #!/usr/bin/env python
            # coding: interpy
        
            # Vars
            package = "Interpy"
            print "Enjoy #{package}!"
        
        How it works
        ------------
        
        *This package is inspired in Dropbox `pyxl template engine`_.*
        
        Parsing
        ~~~~~~~
        
        Interpy uses support for specifying source code encodings as described
        in `PEP 263`_ to do what it does. The functionality was originally
        provided so that python developers could write code in non-ascii
        languages (eg. chinese variable names). Interpy creates a custom
        encoding called interpy which allows it to convert interpolated strings
        into regular python before the file is compiled. Once the interpy codec
        is registered, any file starting with ``# coding: interpy`` is run
        through the interpy parser before compilation.
        
        Why?
        ----
        
        I really enjoyed Ruby String interpolation, and ``"".format(...)`` or
        ``"" % (...)`` seems very verbose to me. *I'm lazy by nature* ;)
        
        .. _pyxl template engine: https://github.com/dropbox/pyxl
        .. _PEP 263: http://www.python.org/dev/peps/pep-0263/
        
Keywords: python string interpolation interpolate ruby codec
Platform: UNKNOWN
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Topic :: Software Development :: Libraries :: Python Modules
