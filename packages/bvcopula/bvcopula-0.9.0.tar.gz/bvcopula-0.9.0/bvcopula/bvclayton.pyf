  !    -*- f90 -*-
  ! Note: the context of this file is case sensitive.
  
  python module bvclayton ! in 
  interface  ! in :bvclayton
     subroutine pbv_clayton_f(u1,u2,res,delta,n) ! in :bvclayton:bvclayton.f90
       real(kind=8) dimension(n),intent(in) :: u1
       real(kind=8) dimension(n),depend(n),intent(in) :: u2
       real(kind=8) dimension(n),depend(n),intent(out) :: res
       real(kind=8) intent(in):: delta
       integer, optional,check(len(u1)>=n),depend(u1),intent(hide) :: n=len(u1)
     end subroutine pbv_clayton_f
     subroutine dbv_clayton_f(u1,u2,res,delta,n) ! in :bvclayton:bvclayton.f90
       real(kind=8) dimension(n),intent(in) :: u1
       real(kind=8) dimension(n),depend(n),intent(in) :: u2
       real(kind=8) dimension(n),depend(n),intent(out) :: res
       real(kind=8) intent(in):: delta
       integer, optional,check(len(u1)>=n),depend(u1),intent(hide) :: n=len(u1)
     end subroutine dbv_clayton_f
     subroutine bv_clayton_inv_hfunc_f(u1,u2,res,delta,n) ! in :bvclayton:bvclayton.f90
       real(kind=8) dimension(n),intent(in) :: u1
       real(kind=8) dimension(n),depend(n),intent(in) :: u2
       real(kind=8) dimension(n),depend(n),intent(out) :: res
       real(kind=8) intent(in):: delta
       integer, optional,check(len(u1)>=n),depend(u1),intent(hide) :: n=len(u1)
     end subroutine bv_clayton_inv_hfunc_f
     subroutine bv_clayton_hfunc_f(u1,u2,res,delta,n) ! in :bvclayton:bvclayton.f90
       real(kind=8) dimension(n),intent(in) :: u1
       real(kind=8) dimension(n),depend(n),intent(in) :: u2
       real(kind=8) dimension(n),depend(n),intent(out) :: res
       real(kind=8) intent(in):: delta
       integer, optional,check(len(u1)>=n),depend(u1),intent(hide) :: n=len(u1)
     end subroutine bv_clayton_hfunc_f
     subroutine rbv_clayton_f(u1,u2,delta,n) ! in :bvclayton:bvclayton.f90
       real(kind=8) dimension(n),intent(out) :: u1
       real(kind=8) dimension(n),intent(out) :: u2
       real(kind=8) intent(in):: delta
       integer, intent(in) :: n
     end subroutine rbv_clayton_f
     function bv_clayton_loglik_f(u1,u2,delta,n) ! in :bvclayton:bvclayton.f90
       real(kind=8) dimension(n),intent(in) :: u1
       real(kind=8) dimension(n),depend(n),intent(in) :: u2
       real(kind=8) intent(in) :: delta
       integer, optional,check(len(u1)>=n),depend(u1),intent(hide) :: n=len(u1)
       real(kind=8) intent(out):: bv_clayton_loglik_f
     end function bv_clayton_loglik_f
     subroutine bv_clayton_mle(u1,u2,nnum,res,ll)
       real(kind=8) dimension(nnum),intent(in) :: u1
       real(kind=8) dimension(nnum),depend(nnum),intent(in) :: u2
       integer, optional,check(len(u1)>=nnum),depend(u1),intent(hide) :: nnum=len(u1)
       real(kind=8) dimension(2),intent(out) :: res
       real(kind=8) intent(out):: ll
     end subroutine bv_clayton_mle
  end interface
end programmodule bvclayton

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
