Metadata-Version: 1.1
Name: dataview
Version: 1.0.3
Summary: A module that allows you to create views of your sequences or its slices
Home-page: https://github.com/damamaty/dataview
Author: Dmitriy Kirichenko
Author-email: damamaty@gmail.com
License: The MIT License (MIT)

Copyright (c) 2014 damamaty

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
Download-URL: https://github.com/damamaty/dataview/tarball/v1.0.1
Description: ========
        dataview
        ========
        
        **dataview** is a module that allows you to create views of your sequences or its slices
        
        Install
        -------
        
        .. code-block::
        
            pip install dataview
        
        To upgrade a previous installation, use:
        
        .. code-block::
        
            pip install dataview
        
        Usage && Examples
        -----------------
        
        .. code-block::
        
            >>> from dataview import DataView
            >>> # You have some data, it can be any sequence (str, list, bytes, tuple, etc..)
            >>> source_data = list(range(5))
            >>> # DataView is just a pointer to your source_data and start/stop/step
            >>> DataView(source_data)
            [0, 1, 2, 3, 4]
            >>> DataView(source_data, 3)
            [0, 1, 2]
            >>> DataView(source_data, 1, 5)
            [1, 2, 3, 4]
            >>> DataView(source_data, None, None, -1)
            [4, 3, 2, 1, 0]
            >>> # You can use slices (completely the same way as list slices)
            >>> DataView(source_data)[::-1]
            [4, 3, 2, 1, 0]
            >>> # Slice return a new DataView object, that points to the previous DataView
            >>> DataView(source_data)[::-1][2:4]
            [2, 1]
            >>> # You can change start/stop/step anytime
            >>> view = DataView(source_data, 0, 1)
            >>> view.start = 1
            >>> view.stop = 2
            >>> view
            [1]
            >>> # View always points to actual data
            >>> source_data[1] = 2
            >>> view
            [2]
            >>> # You can change a view source data
            >>> view.data = list(range(5))
            >>> view
            [1]
        
        
        
        
        
        
        
        
        
        
        
Platform: UNKNOWN
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.3
