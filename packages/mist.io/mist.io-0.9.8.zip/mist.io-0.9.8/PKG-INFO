Metadata-Version: 1.0
Name: mist.io
Version: 0.9.8
Summary: server management, monitoring & automation across clouds from any web device
Home-page: https://mist.io
Author: mist.io
Author-email: info@mist.io
License: AGPLv3
Description: mist.io
        =======
        
        Mist.io helps you manage and monitor your virtual machines, across different
        clouds, using any device that can access the web. It is provided under the 
        GNU AGPL v3.0 License. Check out the freemium service at https://mist.io
        
        Installation
        ------------
        
        Mist.io is written in Python. Currently it is tested and developed using
        Python 2.7. The only system wide requirements are Python, Python header
        files and some basic build tools. Git is used for revision control. Every other
        dependency is build automatically via zc.buildout. Although we use zc.buildout
        it is recommended to install mist.io in a virtualenv to avoid conflicts with
        eggs in the system's Python.
        
        To install the basic requirements in a Debian based distro do::
        
            sudo aptitude install python-dev build-essential git
        
        If you wish to install it in a virtual environment you'll also need::
        
            sudo aptitude install python-virtualenv
        
        In MacOSX you have to install Xcode and its command line tools. For virtualenv
        you simply run::
        
            sudo easy_install virtualenv
        
        Supposing you have all the above, the steps are simple. Clone the repository,
        create a virtualenv and run buildout::
        
            git clone https://github.com/mistio/mist.io.git
            cd mist.io
            virtualenv --no-site-packages .
            ./bin/python bootstrap.py
            ./bin/buildout -v
        
        In case you are using an older version of setuptools, bootstrap will fail. To 
        solve this you need to::
        
           ./bin/pip install setuptools --upgrade
        
        Deployment
        ----------
        
        Mist.io comes with two sets of deployment options, one suited for production
        environments and one for develompent.
        
        To get it up and running for production::
        
            ./bin/uwsgi-start production.ini
        
        For development mode::
        
            ./bin/uwsgi-start development.ini
        
        Or if you prefer to use paster::
        
            ./bin/paster serve development.ini --reload
        
        With the --reload flag, whenever there are changes in Python code and templates
        the server will automatically restart to load the new version. Changes in css
        and javascript don't need a restart to show up. To stop it, simply press CTRL+C.  
        
        Point your browser to http://127.0.0.1:6543 and you are ready to roll!
        
        
        0.9.8
        -----
        
        - add support for GCE, SoftLayer, HP Cloud, DigitalOcean & NephoScale
        - add support for bare metal servers
        - major improvements in graphs
        - major performance improvements
        - update dependencies (libcloud, jQueryMobile, Ember.js, d3.js)
        - allow custom ssh ports and usernames
        - allow manual installation of monitoring
        - major refactoring of backend and frontend code
        - added API & browser tests
        - improved image management
        - get additional info when probing machines
        
        ...and many more smaller changes.
         
        A complete listing of merged pull requests is available at: 
        https://github.com/mistio/mist.io/pulls?direction=desc&sort=created&state=closed
        
        
        0.9.5
        -----
        
        - add support for Openstack
        - add support for RedHat Openshift
        - update install instructions
        - reset machine selection when leaving machine list view
        - fix bug that prevented login to the service in order to get server stats
        - don't allow adding duplicate SSH keys
        - don't allow adding duplicate backends
        - fix refreshing of the enable monitoring popup
        - support Rackspace Sydney backend
        - upgrade libcloud version
        - stop polling a machine for data after user disables monitoring for that machine
        - fix duplicate rules bug
        - UI improvements on spinners for rules
        - add extra arguments to machine actions to assist in automatic execution
        
        0.9.4
        -----
        
        - show spinners when editing rules
        - fix issue with polling for monitored machines
        
        0.9.3
        -----
        
        - add bigger spinner while fetching stats
        - improve ram drawing
        - add small png depicting the avg load in list view for monitored machines
        
        0.9.2
        -----
        
        - update apikey/secret backend labels for Rackspace and Linode
        - make the s in Rackspace lowercase
        - automatically generate key on create machine when there are no keys available
        - change default rule value to 5 instead of 60 since it refers to avg load
        - alerting improvements
        
        
        0.9.1
        -----
        
        - splash page css fix
        - persistent rules
        - enable commands in rules
        - warn when exceeding the beta service limit of monitored machines
        
        
        0.9.0
        -----
        
        - Enable monitoring by connecting to mist.io service
        - Several graph related fixes for machine stats
        - Shell fixes and styling
        - Change the UI of add backend and add machine
        - Optionally run deployment script after machine creation
        - Add key section and key actions
        - Convert all jQuery Mobile dialogs to popups and panels
        - Upgrade jQuery to v1.9.1, jQuery Mobile to v1.3.0, Ember.js to v1.0.0-rc3 and libcloud to v0.12.3
        
        
        0.8.0
        -----
        
        -  Base stable version
        
Keywords: web cloud server management monitoring automation mobile libcloud pyramid amazon aws rackspace openstack linode softlayer digitalocean gce
Platform: UNKNOWN
Classifier: Programming Language :: Python
Classifier: Framework :: Pylons
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: License :: OSI Approved :: GNU Affero General Public License v3
Classifier: Topic :: Internet :: WWW/HTTP :: WSGI :: Application
