.TH ANSIBLE.VIRT 3 "2013-11-27" "1.4.1" "ANSIBLE MODULES"
.\" generated from library/cloud/virt
.SH NAME
virt \- Manages virtual machines supported by libvirt
.\" ------ DESCRIPTION
.SH DESCRIPTION
.PP
Manages virtual machines supported by \fIlibvirt\fR. 
.\" ------ OPTIONS
.\"
.\"
.SH OPTIONS
   
.IP command
in addition to state management, various non-idempotent commands are available. See examples
.IR Choices :
create,status,start,stop,pause,unpause,shutdown,undefine,destroy,get_xml,autostart,freemem,list_vms,info,nodeinfo,virttype,define.   
.IP name
name of the guest VM being managed. Note that VM must be previously defined with xml.(required)   
.IP state
Note that there may be some lag for state requests like \fCshutdown\fR since these refer only to VM states. After starting a guest, it may not be immediately accessible.
.IR Choices :
running,shutdown. (default: no)   
.IP uri
libvirt connection uri   
.IP xml
XML document used with the define command.\"
.\"
.\" ------ NOTES
.\"
.\"
.\" ------ EXAMPLES
.\" ------ PLAINEXAMPLES
.SH EXAMPLES
.nf
# a playbook task line:
- virt: name=alpha state=running

# /usr/bin/ansible invocations
ansible host -m virt -a "name=alpha command=status"
ansible host -m virt -a "name=alpha command=get_xml"
ansible host -m virt -a "name=alpha command=create uri=lxc:///"

# a playbook example of defining and launching an LXC guest
tasks:
  - name: define vm
    virt: name=foo
          command=define
          xml="{{ lookup('template', 'container-template.xml.j2') }}"
          uri=lxc:///
  - name: start vm
    virt: name=foo state=running uri=lxc:///

.fi

.\" ------- AUTHOR
.SH AUTHOR
Michael DeHaan, Seth Vidal
.SH SEE ALSO
.IR ansible (1),
.I http://ansible.github.com/modules.html#virt