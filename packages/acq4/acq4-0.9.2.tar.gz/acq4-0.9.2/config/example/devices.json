{
"_":
"# This configuration file defines a set of simulated devices that allow some 
# of ACQ4's acquisition capabilities to be tested on any machine. 
# 
# Also included are example configuration for every type of device supported
# by ACQ4, commented out. These may be used to construct a working 
# device configuration file.",



"_": 
"# First, define the NI DAQ device we will use. For use with a real DAQ, simply
# remove the line 'mock: True'. The name 'DAQ', defined here, will appear
# many times throughout the config to refer to this device.",

"DAQ": {
    "driver": 'NiDAQ',
    "mock": true,
    "_": "# Default mode for AI channels. Options are 'NRSE', 'RSE', and 'DIFF'",
    "_": "# This may be overridden for individual channels.",
    "defaultAIMode": 'NRSE'
    }
}
        
# A simple device connected to the DAQ that uses one AI channel and one AO 
# channel. As with all of the following device definitions, the name 
# 'DaqDevice' is arbitrary.
DaqDevice:
    driver: 'DAQGeneric'
    channels:
        AIChan:
            device: 'DAQ'
            channel: '/Dev1/ai0'
            type: 'ai'
        AOChan:
            device: 'DAQ'
            channel: '/Dev1/ao0'
            type: 'ao'
    
# A simulated patch-clamp amplifier. It is connected to a Hodgkin-Huxley
# neuron model, allowing some of ACQ4's acquisition modules to be tested on
# a "real" system.
Clamp1:
    driver: 'MockClamp'
    simulator: 'builtin'  # Also supports 'neuron' if you have neuron+python
                            # installed. See lib/devices/MockClamp/neuronSim.py.
                            
    # Define two connections to the DAQ:
    Command:
        device: 'DAQ'
        channel: '/Dev1/ao0'
        type: 'ao'
    ScaledSignal:
        device: 'DAQ'
        channel: '/Dev1/ai5'
        mode: 'NRSE'
        type: 'ai'
        
    # Default holding values.
    icHolding: 0.0
    vcHolding: -50e-3


# A simulated motorized stage.    
Stage:
    driver: 'MockStage'
    transform:
        pos: (0, 0, 0)
        scale: (1, 1, 1)
        angle: 0

# A microscope device, providing a way to inform ACQ4 about the set of 
# objective lenses available and which is currently in use. 
Microscope:
    driver: 'Microscope'
    parentDevice: 'Stage'
    objectives:
        ## All scales in m/px
        0:
            5x1.0:
                name: '5x 0.25na FLUAR'
                scale: 2.581*um/px
        1:
            63x0.9:
                name: '63x 0.9na Achroplan'
                scale: 0.205*um/px
                offset: 70*um, 65*um
            63x0.95:
                name: '63x 0.95na Achroplan'
                scale: 0.205*um/px
                offset: 70*um, 65*um
            40x:
                name: '40x 0.75na Achroplan'
                scale: 0.324*um/px
                offset: -43*um, 9*um


# A simulated camera. Generates noise and calcium-indicator-like signals.
Camera:
    driver: 'MockCamera'
    parentDevice: 'Microscope'
    transform:                          ## transform defines the relationship between the camera's
                                        ## sensor coordinate system (top-left is usually 0,0 and
                                        ## pixels are 1 unit wide) and the coordinate system of its
                                        ## scopeDevice
        position: (0, 0)
        scale: (1, -1)    # for this example, we have inverted the y-axis of the camera.
        angle: 0

    exposeChannel:                                 ## Channel for recording expose signal
        device: 'DAQ'
        channel: '/Dev1/port0/line0'
        type: 'di'
    #triggerOutChannel: 'DAQ', '/Dev1/PFI5'        ## Channel the DAQ should trigger off of to sync with camera
    triggerInChannel:                              ## Channel the DAQ should raise to trigger the camera
        device: 'DAQ'
        channel: '/Dev1/port0/line1'
        type: 'do'

    #params:
    #    qprmSyncB: 'ExposureMask'

# A laser device. Simulating a shutter opening currently has no effect.
Laser-UV:
    driver: 'Laser'
    parentDevice: 'Microscope'
    pulseRate: 100*kHz                      ## Laser's pulse rate
    power: 100*mW
    shutter:
        device: 'DAQ'
        channel: '/Dev1/line30'           ## channel for triggering shutter
        type: 'do'
        delay: 10*ms                      ## how long it takes the shutter to fully open
    wavelength: 355*nm
    alignmentMode:
        shutter: True
    defaultPowerMeter: 'NewportMeter'

# Galvanometric scan mirrors. Simulating motion of the mirrors currently has 
# no effect.
Scanner:
    driver: 'Scanner'
    parentDevice: 'Microscope'
    XAxis:
        device: 'DAQ'
        channel: '/Dev1/ao2'
        type: 'ao'
    YAxis:
        device: 'DAQ'
        channel: '/Dev1/ao3'
        type: 'ao'
    defaultCamera: "Camera"
    defaultLaser: "Laser"
    commandLimits: -1.5, 1.5

# Photomultiplier device needs nothing more than to read from a DAQ AI channel.
PMT:
    driver: 'DAQGeneric'
    channels:
        Input:
            device: 'DAQ'
            channel: '/Dev1/ai0'
            type: 'ai'

# Pockels cell is just an analog output
PockelsCell:
    driver: 'DAQGeneric'
    channels:
        Switch:
            device: 'DAQ'
            channel: '/Dev1/ao2'
            type: 'ao'
