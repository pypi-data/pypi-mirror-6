
[global]
# the port the server listens on by default.
server.socket_port = 9876



# the root directory where the static files are stored.
[/]
tools.staticdir.root = os.path.join(os.path.abspath('.'), 'static')
#tools.staticdir.root = "/home/site/www/newsletter_static/"


# If running behind a reverse proxy like apache, or nginx then we have to use these.
#tools.proxy.on = True
#tools.proxy.local = ""
#tools.proxy.base = "http://example.com/"


[/images]
tools.staticdir.on = True
tools.staticdir.dir = "images"
[/tiny_mce]
tools.staticdir.on = True
tools.staticdir.dir = "tiny_mce"
[/js]
tools.staticdir.on = True
tools.staticdir.dir = "js"
[/css]
tools.staticdir.on = True
tools.staticdir.dir = "css"


# basic auth protecting the admin section with a username and password.
#  For real protection, the site should run under SSL.
[/admin]
tools.basic_auth.on = True
tools.basic_auth.realm = 'Please Enter User/Password'

# set up your users password like this.  Secure by default means there are no default users.
#tools.basic_auth.users = {"admin": newsletter.newsletterapp.newsletterapp.encrypt_pwd("youradminpassword")}
tools.basic_auth.users = {}
tools.basic_auth.encrypt = newsletter.newsletterapp.newsletterapp.encrypt_pwd

[newsletter]
# URL where newsletter app is being served from:
base_url = "http://localhost:" + str(cherrypy.server.socket_port) + "/"
#base_url = "http://example.com/newsletter/"

static_dir = "static"

#static_dir = "/home/site/www/newsletter_static/"

# where the database files are stored.
db_dir = "db"
#db_dir = "/home/site/newsletter/db/"


#Where the emails will be sent from.
#from_addr = "yourname@example.com"

# sending email server details.
smtp_username = ""
smtp_password = ""
smtp_host = "localhost"

# should we use the sendmail command on unix hosts instead of the smtp server.
sendmail_cmd = False

# You can use an external smtp server too, like gmail if you have an account.
#smtp_username = ""
#smtp_password = ""
#smtp_host = "smtp.gmail.com:587"


# amount of time to sleep between sends in seconds.  
#   So as to take it easy on mail servers.  So they don't over load it.
smtp_sleep_between_sends = 1.0



# ----------------------
#  send_message_ parts...


[send_message_a_contact]
# ----------------------
#  You can add multiple SendMessage instances. 
# To make more, create new sections starting with send_message_
# These are useful for things like contact forms.

# where you want this one mounted.
mount_point = "contact"

# exposed if you want to be able to send emails using a send_message url.
send_message = True

# set this to True if you want this to work.  Secure by default means it does not work.
exposed = False

# the email template to use for the body of the message.
email_body_template = "send_message_email_template"

# the email template to use for the subject
email_subject_template = "send_message_email_subject_template"

# the html returned.
web_front_response_template = "send_message_template"

# TODO: this could be used to display a form for getting input.
web_front_form_template = None


fromaddr = "yourname@example.com"

# if this is None then we try and get this from the toaddr input.
toaddr = "sendingto@example.com"


# validate_input is a function which can be used to validate the input.
#    set to None to do no validation
validate_input = None
# It my be useful to use py_dirs config item, 
#   or an environment variable to put a module into your path.
#validate_input = validators.myvalidationfunc






