Metadata-Version: 1.1
Name: fuzzysearch
Version: 0.2.0
Summary: fuzzysearch is useful for finding approximate subsequence matches
Home-page: https://github.com/taleinat/fuzzysearch
Author: Tal Einat
Author-email: taleinat@gmail.com
License: MIT
Description: ===============================
        fuzzysearch
        ===============================
        
        .. image:: https://badge.fury.io/py/fuzzysearch.png
            :target: http://badge.fury.io/py/fuzzysearch
        
        .. image:: https://travis-ci.org/taleinat/fuzzysearch.png?branch=master
                :target: https://travis-ci.org/taleinat/fuzzysearch
        
        .. image:: https://pypip.in/d/fuzzysearch/badge.png
                :target: https://crate.io/packages/fuzzysearch?version=latest
        
        
        fuzzysearch is useful for finding approximate subsequence matches
        
        * Free software: MIT license
        * Documentation: http://fuzzysearch.rtfd.org.
        
        Features
        --------
        
        * Fuzzy sub-sequence search: Find parts of a sequence which match a given sub-sequence up to a given maximum Levenshtein distance.
        
        Simple Example
        --------------
        You can usually just use the `find_near_matches()` utility function, which
        chooses a suitable fuzzy search implementation according to the given
        parameters:
        
        .. code:: python
        
            >>> from fuzzysearch import find_near_matches
            >>> find_near_matches('PATTERN', 'aaaPATERNaaa', max_l_dist=1)
            [Match(start=3, end=9, dist=1)]
        
        Advanced Example
        ----------------
        If needed you can choose a specific search implementation, such as
        `find_near_matches_with_ngrams()`:
        
        .. code:: python
        
            >>> sequence = '''\
            GACTAGCACTGTAGGGATAACAATTTCACACAGGTGGACAATTACATTGAAAATCACAGATTGGTCACACACACA
            TTGGACATACATAGAAACACACACACATACATTAGATACGAACATAGAAACACACATTAGACGCGTACATAGACA
            CAAACACATTGACAGGCAGTTCAGATGATGACGCCCGACTGATACTCGCGTAGTCGTGGGAGGCAAGGCACACAG
            GGGATAGG'''
            >>> subsequence = 'TGCACTGTAGGGATAACAAT' #distance 1
            >>> max_distance = 2
        
            >>> from fuzzysearch import find_near_matches_with_ngrams
            >>> find_near_matches_with_ngrams(subsequence, sequence, max_distance)
            [Match(start=3, end=24, dist=1)]
        
        
        
        
        History
        -------
        
        0.1.0 (2013-11-12)
        ++++++++++++++++++
        
        * Two working implementations
        * Extensive test suite; all tests passing
        * Full support for Python 2.6-2.7 and 3.1-3.3
        * Bumped status from Pre-Alpha to Alpha
        
        0.0.1 (2013-11-01)
        ++++++++++++++++++
        
        * First release on PyPI.
Keywords: fuzzysearch
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.1
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
