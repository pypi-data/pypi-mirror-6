@startuml classes.png

Title <b>ztfy.thesaurus</b>\nclasses diagram\n


namespace ZODB #eeeeee {

	package persistent #ffffff {

		class Persistent {
		}
	}
}


namespace xml #eeeeee {

	package sax.handler #ffffff {

		class ContentHandler {
		}
	}
}


namespace zope #eeeeee {

	package zope.container #ffffff {

		interface IContainer
		interface IContentContainer

		IContainer <|-- IContentContainer
		IContentContainer <|-- Folder
	}
}


namespace ztfy #eeeeee {

	package thesaurus {

		package interfaces #ffffff {

			package _term {

				interface IThesaurusTerm {
					-id: Int
					+label: TextLine
					+note: TextLine
					+generic: IThesaurusTerm
					+specifics: List<IThesaurusTerm>
					+usage: IThesaurusTerm
					+used_for: List<IThesaurusTerm>
					+definition: Text
					+status: TextLine
					+creation_date: Date
					+modification_date: Date
					+level: Int
					+micro_thesaurus: Bool
					+parent: IThesaurusTerm
					+extracts: List<IThesaurusExtractInfo>
				}
			}

			package _loader {

				interface IThesaurusHandler {
				}

				interface IThesaurusLoaderConfiguration {
					+data: Bytes
					+format: Choice<IThesaurusFileFormat>
					+encoding: Choice
				}

				IThesaurusLoaderConfiguration <|-- IThesaurusUpdaterConfiguration
				interface IThesaurusUpdaterConfiguration {
					+clear: Bool
				}

				interface IThesaurusLoader {
					+__init__(config)
					+load(): IThesaurus
				}
			}

			package _writer {

				interface IThesaurusWriter {
					+save(IThesaurus)
				}
			}

			package _thesaurus {

				interface IThesaurusExtractInfo {
					+name: TextLine
					+description: Text
					+color: ColorField
					+managers: List<IPrincipal>
				}

				IContainer <|-- IThesaurusExtracts
				interface IThesaurusExtracts

				IContentContainer <|-- IThesaurus
				interface IThesaurus {
					+name: TextLine
					+language: Choice
					+load(config)
					+getTerms(query, parent, level): List<IThesaurusTerm>
				}
			}

			package _index {

				interface IThesaurusContentTarget

			}
		}

		package term {
			IThesaurusTerm <|.. ThesaurusTerm
			Persistent <|-- ThesaurusTerm
			class ThesaurusTerm {
			}
			ThesaurusTerm -- ThesaurusTerm
		}

		package loader #ffffff {

			IThesaurusHandler <|-- BaseThesaurusHandler
			BaseThesaurusHandler <|-- BaseXMLThesaurusHandler
			BaseThesaurusHandler <|-- SuperDocThesaurusHandler
			BaseXMLThesaurusHandler <|-- SKOSThesaurusHandler

			IThesaurusLoader <|-- BaseThesaurusLoader
			BaseThesaurusLoader <|-- SKOSThesaurusLoader
			BaseThesaurusLoader <|-- SuperDocThesaurusLoader
			SKOSThesaurusLoader .. SKOSThesaurusHandler
			SuperDocThesaurusLoader .. SuperDocThesaurusHandler
		}

		package writer #ffffff {

			IThesaurusWriter <|-- BaseThesaurusWriter
			BaseThesaurusWriter <|-- SKOSThesaurusWriter
			BaseThesaurusWriter <|-- SuperDocThesaurusWriter
		}

		IThesaurusExtractInfo <|.. ThesaurusExtract
		Persistent <|-- ThesaurusExtract
		class ThesaurusExtract {
		}

		IThesaurusExtracts <|.. ThesaurusExtracts
		Folder <|-- ThesaurusExtracts
		class ThesaurusExtracts {
		}

		ThesaurusExtracts *-- ThesaurusExtract

		IThesaurus <|.. Thesaurus
		Folder <|-- Thesaurus
		class Thesaurus {
		}

		Thesaurus *-- ThesaurusTerm
		Thesaurus *-- ThesaurusExtracts
	}
}

@enduml
