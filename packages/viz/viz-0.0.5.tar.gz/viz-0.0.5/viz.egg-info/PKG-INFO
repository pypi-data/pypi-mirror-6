Metadata-Version: 1.1
Name: viz
Version: 0.0.5
Summary: Data visualization in the terminal
Home-page: https://github.com/chbrown/viz
Author: Christopher Brown
Author-email: io@henrian.com
License: Copyright (c) 2013 Christopher Brown

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

Description: viz
        ===
        
        Data visualization in the terminal.
        
        Install
        -------
        
        **From PyPI:**
        
        ::
        
            easy_install viz
        
        **From source:**
        
        ::
        
            git clone https://github.com/chbrown/viz.git
            cd viz
            python setup.py install
        
        The CLI entry point is ``viz``, which should be installed on your
        ``PATH``.
        
        Commands
        --------
        
        ``viz hist``
        ~~~~~~~~~~~~
        
        Read floats from ``stdin`` and plot as a single line histogram.
        
        **Example**: ping google every 100ms (0.1s) and plot the first 50
        response times you get back:
        
        ::
        
            ping -i 0.1 google.com | head -50 | sed -n 's/.*time=\(.*\) ms/\1/p' | viz hist
        
        Example result (which should fit your terminal width automatically):
        
        ::
        
            26.1390000[▁      ▁▁  ▁▁▂▂ ▉ ▂▂ ▃ ▂▁▂ ▁ ▁▁      ▁   ▁                                    ]39.5580000
        
        ``viz total``
        ~~~~~~~~~~~~~
        
        Read floats from ``stdin`` and sum them. No graphics, but useful because
        ``awk '{sum+=$1}END{print sum}`` is too long.
        
        **Example**: count the bytes used by the current directory and its
        children.
        
        ::
        
            find . -ls | tr -s ' ' | cut -d ' ' -f 7 | viz total
        
        Example result:
        
        ::
        
            8519086.0
        
        Compare to du:
        
        ::
        
            echo $[$(du -sk . | cut -f 1) * 1024]
            > 8531968
        
        ``viz points``
        ~~~~~~~~~~~~~~
        
        Read floats from ``stdin``, plot on a single line from left to right
        with as much granularity as the terminal will allow. Otherwise, bin
        incrementally and plot the arithmetic mean of each bin.
        
        **Example**: ping some really awful website every 100ms, plot the first
        100 successful responses (takes about 10s).
        
        ::
        
            ping -i 0.1 godaddy.com | head -100 | sed -n 's/.*time=\(.*\) ms/\1/p' | viz points
        
        Example result:
        
        ::
        
            [+156.298000]
               ▃▃ ▁▃          ▁ ▁▁ ▁    ▁  ▁▁▁▂ ▃▂ ▉▂              ▁ ▁▁      ▁▂▁       ▁  ▁          ▁      ▁
            [+70.593000]
        
        The top line is the maximum, the bottom is the minimum. The other values
        are scaled linearly between those extremes.
        
        Dependencies:
        -------------
        
        -  ``numpy``
        
        Related projects (mostly graphical visualizations for Python)
        -------------------------------------------------------------
        
        -  `Matplotlib <http://matplotlib.org/api/pyplot_api.html>`__: feels
           archaic to the touch. The pyplot fans have never run ``import this``,
           the interface is unguessable and murkily documented.
        -  `Bokeh <http://bokeh.pydata.org/quickstart.html>`__: haven't used yet
        -  `Vispy <http://vispy.org/>`__: haven't used yet
        
        License
        -------
        
        Copyright (c) 2013 Christopher Brown. `MIT
        Licensed <https://raw.github.com/chbrown/viz/master/LICENSE>`__.
        
Keywords: console terminal data visualization plot histogram
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.7
Classifier: Topic :: Text Processing :: General
