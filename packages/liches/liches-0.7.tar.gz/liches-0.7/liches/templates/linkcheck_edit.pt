<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:tal="http://xml.zope.org/namespaces/tal">

<head>
  <title>Add linkcheck</title>
</head>

<body>
    <h1>Linkcheck</h1>
    ${form.begin(request.route_url('editlinkcheck', check_id=data.check_id))}
        <fieldset>
            ${form.csrf_token()}
            ${form.errorlist('url')}
            ${form.label('url', 'URL:')}
            <div class="form-help">Start linkchecking at this URL</div>
            ${form.text('url', value=data.url)}
            <br />
            ${form.errorlist('root_url')}
            ${form.label('root_url', 'Site Root URL:')}
            <div class="form-help">Root URL of the checke site</div>
            ${form.text('root_url', value=data.root_url)}
            <br />
            ${form.errorlist('active')}
            ${form.label('active', 'Active:')}
            <div class="form-help">Only active linkchecks will be executed</div>
            ${form.checkbox('active', checked=data.active)}
            <br />
            ${form.errorlist('recursion_level')}
            ${form.label('recursion_level', 'Recursion Level:')}
            <div class="form-help">
            Check recursively all links up to given depth.
            A zero or negative depth will enable infinite recursion.
            Default depth is infinite.
            </div>
            ${form.text('recursion_level', value=data.recursion_level)}
            <br />
            ${form.errorlist('check_css')}
            ${form.label('check_css', 'Check CSS:')}
            <div class="form-help">
            Check syntax of CSS URLs with the W3C online validator.
            </div>
            ${form.checkbox('check_css', checked=data.check_css)}
            <br />
            ${form.errorlist('check_html')}
            ${form.label('check_html', 'Check HTML:')}
            <div class="form-help">
            Check syntax of HTML URLs with the W3C online validator.
            </div>
            ${form.checkbox('check_html', checked=data.check_html)}
            <br />
            ${form.errorlist('scan_virus')}
            ${form.label('scan_virus', 'Scan for viruses:')}
            <div class="form-help">
            Scan content of URLs for viruses with ClamAV.
            </div>
            ${form.checkbox('scan_virus', checked=data.scan_virus)}
            <br />
            ${form.errorlist('warnings')}
            ${form.label('warnings', 'Warnings:')}
            <div class="form-help">
            Log warnings. Default is not to log warnings.
            </div>
            ${form.checkbox('warnings', checked=data.warnings)}
            <br />
            ${form.errorlist('warning_size')}
            ${form.label('warning_size', 'Warning Size:')}
            <div class="form-help">
            Print a warning if content size info is available and exceeds
            the given number of bytes.
            </div>
            ${form.text('warning_size', value=data.warning_size)}
            <br />
            ${form.errorlist('anchors')}
            ${form.label('anchors', 'Check anchors:')}
            <div class="form-help">
            Check HTTP anchor references. Default is not to check anchors.
            This option enables logging of the warning <b>url-anchor-not-found</b>.
            </div>
            ${form.checkbox('anchors', checked=data.anchors)}
            <br />
            ${form.errorlist('cookies')}
            ${form.label('cookies', 'Cookies:')}
            <div class="form-help">
            Accept and send HTTP cookies according to RFC 2109.
            Only cookies which are sent back to the originating server are
            accepted. Sent and accepted cookies are provided as additional
            logging information.
            </div>
            ${form.checkbox('cookies', checked=data.cookies)}
            <br />
            <!--
            ${form.errorlist('cookiefile')}
            ${form.label('cookiefile', 'Cookie File:')}
            <div class="form-help">
            Read a file with initial cookie data.
            </div>
            ${form.textarea('cookiefile', content=data.cookiefile)}
            <br />
            -->
            ${form.errorlist('ignore_url')}
            ${form.label('ignore_url', 'Ignore URL:')}
            <div class="form-help">
            URLs matching the given regular expressions will be ignored
            and not checked.
            </div>
            ${form.textarea('ignore_url', content=data.ignore_url)}
            <br />
            ${form.errorlist('no_follow_url')}
            ${form.label('no_follow_url', 'No follow URL:')}
            <div class="form-help">
            Check but do not recurse into URLs matching the given regular
            expressions.
            </div>
            ${form.textarea('no_follow_url', content=data.no_follow_url)}
            <br />
            ${form.errorlist('timeout')}
            ${form.label('timeout', 'Timeout:')}
            <div class="form-help">
            Set the timeout for connection attempts in seconds.
            The default timeout is 60 seconds.
            </div>
            ${form.text('timeout', value=data.timeout)}
            <br />
            ${form.errorlist('pause')}
            ${form.label('pause', 'Pause:')}
            <div class="form-help">
            Pause the given number of seconds between two subsequent
            connection requests to the same host. Default is no pause
            between requests.
            </div>
            ${form.text('pause', value=data.pause)}
            <br />
            ${form.submit('form.submitted', 'Edit', class_='submit')}
            ${form.submit('form.deleted', 'Delete', class_='submit')}
            ${form.submit('form.execute', 'Execute', class_='submit')}
            ${form.submit('form.canceled', 'Cancel', class_='submit')}
        </fieldset>
    ${form.end()}
</body>
</html>
