Metadata-Version: 1.0
Name: wsgi-lite
Version: 0.5a3
Summary: A better way to write WSGI apps and middleware
Home-page: https://bitbucket.org/pje/wsgi_lite/
Author: P.J. Eby
Author-email: web-sig@python.org
License: ASF
Download-URL: https://bitbucket.org/pje/wsgi_lite/get/default.tar.gz#egg=wsgi_lite-dev
Description: Wouldn't it be nice if writing *correct* WSGI middleware was this simple?
        
        ::
        
        >>> from wsgi_lite import lite, lighten
        
        >>> def latinator(app):
        ...
        ...     # Make sure that `app` can be invoked via the Lite protocol, even
        ...     # if it's a standard WSGI 1 app:
        ...     app = lighten(app)
        ...
        ...     @lite
        ...     def middleware(environ):
        ...         status, headers, body = app(environ)
        ...         for name, value in headers:
        ...             if name.lower()=='content-type' and value=='text/plain':
        ...                 break
        ...         else:
        ...             # Not text/plain, pass the request through unchanged
        ...             return status, headers, body
        ...
        ...         # Strip content-length if present, else it'll be wrong
        ...         headers = [
        ...             (name, value) for name, value in headers
        ...                 if name.lower() != 'content-length'
        ...         ]
        ...         return status, headers, (piglatin(data) for data in body)
        ...
        ...     return middleware
        
        Using just two decorators, WSGI Lite lets you create correct and compliant
        middleware and applications, without needing to worry about ``start_response``,
        ``write`` and ``close`` calls.  And with those *same* two decorators, it also
        lets you manage resources to be released at the end of a request, and
        automatically pass in keyword arguments to your apps or middleware that
        are obtained from the WSGI environment (like WSGI server extensions or
        middleware-supplied parameters such as request or session objects).
        
        For more details, check out the `project's home page on BitBucket
        <https://bitbucket.org/pje/wsgi_lite/#toc>`_, and scroll down to the table
        of contents.
        
        WSGI Lite is currently only available for Python 2.x (tested w/2.3 up to 2.7)
        but the source should be quite portable to 3.x, as its magic is limited to
        inspecting function argument names, and cloning functions using
        ``new.function()``.
        
        .. _toc:
        
Platform: UNKNOWN
