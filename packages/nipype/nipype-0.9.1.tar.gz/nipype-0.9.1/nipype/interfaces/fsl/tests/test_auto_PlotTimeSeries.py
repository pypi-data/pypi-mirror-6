# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from nipype.testing import assert_equal
from nipype.interfaces.fsl.utils import PlotTimeSeries
def test_PlotTimeSeries_inputs():
    input_map = dict(ignore_exception=dict(nohash=True,
    usedefault=True,
    ),
    plot_size=dict(argstr='%s',
    ),
    labels=dict(argstr='%s',
    ),
    y_min=dict(xor=('y_range',),
    argstr='--ymin=%.2f',
    ),
    title=dict(argstr='%s',
    ),
    args=dict(argstr='%s',
    ),
    sci_notation=dict(argstr='--sci',
    ),
    plot_range=dict(argstr='%s',
    xor=('plot_start', 'plot_finish'),
    ),
    plot_start=dict(xor=('plot_range',),
    argstr='--start=%d',
    ),
    legend_file=dict(argstr='--legend=%s',
    ),
    in_file=dict(position=1,
    mandatory=True,
    argstr='%s',
    ),
    terminal_output=dict(nohash=True,
    mandatory=True,
    ),
    environ=dict(nohash=True,
    usedefault=True,
    ),
    x_units=dict(usedefault=True,
    argstr='-u %d',
    ),
    x_precision=dict(argstr='--precision=%d',
    ),
    y_max=dict(xor=('y_range',),
    argstr='--ymax=%.2f',
    ),
    output_type=dict(),
    y_range=dict(argstr='%s',
    xor=('y_min', 'y_max'),
    ),
    plot_finish=dict(xor=('plot_range',),
    argstr='--finish=%d',
    ),
    out_file=dict(hash_files=False,
    genfile=True,
    argstr='-o %s',
    ),
    )
    inputs = PlotTimeSeries.input_spec()

    for key, metadata in input_map.items():
        for metakey, value in metadata.items():
            yield assert_equal, getattr(inputs.traits()[key], metakey), value
def test_PlotTimeSeries_outputs():
    output_map = dict(out_file=dict(),
    )
    outputs = PlotTimeSeries.output_spec()

    for key, metadata in output_map.items():
        for metakey, value in metadata.items():
            yield assert_equal, getattr(outputs.traits()[key], metakey), value
