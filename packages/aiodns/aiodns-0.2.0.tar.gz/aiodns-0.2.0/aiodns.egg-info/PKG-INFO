Metadata-Version: 1.1
Name: aiodns
Version: 0.2.0
Summary: Simple DNS resolver for asyncio
Home-page: http://github.com/saghul/aiodns
Author: Saúl Ibarra Corretgé
Author-email: saghul@gmail.com
License: UNKNOWN
Description: 
        ===============================
        Simple DNS resolver for asyncio
        ===============================
        
        .. image:: https://secure.travis-ci.org/saghul/aiodns.png?branch=master
            :target: http://travis-ci.org/saghul/aiodns
        
        aiodns provides a simple way for doing asynchronous DNS resolutions
        with a synchronous looking interface by using `pycares <https://github.com/saghul/pycares>`_.
        
        
        Usage
        =====
        
        Example:
        
        ::
        
            import asyncio
            import aiodns
        
            loop = asyncio.get_event_loop()
            resolver = aiodns.DNSResolver(loop=loop)
            f = resolver.query('google.com','A')
            result = loop.run_until_complete(f)
            print(result)
        
        
        The following query types are supported: A, AAAA, CNAME, MX, NAPTR, NS, PTR, SOA, SRV, TXT.
        
        
        Running the test suite
        ======================
        
        To run the test suite: ``python test_aiodns.py``
        
        
        Author
        ======
        
        Saúl Ibarra Corretgé <saghul@gmail.com>
        
        
        License
        =======
        
        aiodns uses the MIT license, check LICENSE file.
        
        
        Python versions
        ===============
        
        Python 3.4 is natively supported. Python 3.3 supported using the `asyncio package <https://pypi.python.org/pypi/asyncio>`_.
        Older Python versions(2.6 - 3.2) are supported using `trollius <https://pypi.python.org/pypi/trolliu>`_.
        
        
        Contributing
        ============
        
        If you'd like to contribute, fork the project, make a patch and send a pull
        request. Have a look at the surrounding code and please, make yours look
        alike :-)
        
        
Platform: POSIX
Platform: Microsoft Windows
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: POSIX
Classifier: Operating System :: Microsoft :: Windows
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.0
Classifier: Programming Language :: Python :: 3.1
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
