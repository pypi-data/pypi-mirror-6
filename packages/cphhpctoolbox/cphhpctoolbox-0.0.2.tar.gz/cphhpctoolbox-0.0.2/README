CPHHPC Toolbox README
Last updated/generated 11-04-2014 12:00


  1. CPHHPC Toolbox
  2. Requirements
  3. Installation
    3.1. Pip
    3.2. Easy_install
    3.3. Manual Installation
  4. Run from Source
  5. Upgrade
  6. Uninstallation
  7. Using the toolbox
  8. Questions and Feedback
  9. External References


  1. CPHHPC Toolbox
  =================

Copenhagen High Performance Computing Toolbox is a collection of
high performance libraries for flexible and efficient scientific
computation using python.

Implementations provide engines optimized for particular hardware,
in general Numpy implementations are used when most efficient,
otherwise PyOpenCL implementations are used.


  2. Requirements
  ===============

The CPHHPC Toolbox relies on Python[1], Numpy[2] and PyOpenCL[3] for all core
functionality. PyOpenCL requires access to one or more working OpenCL 
runtime(s). 
Please refer to the individual documentation pages online in order to satisfy 
those dependencies.

The toolbox should work with any Python-2.4+ interpreter and a fairly
recent Numpy and PyOpenCL installation, but we have only tested with
Python 2.7.3, Numpy-1.6.1 and PyOpenCL-2013.2


  3. Installation
  ===============

We provide three installation methods to support the widest possible
range of platforms. The easiest way to install is with the pip or
easy_install methods that can pull down the package directly from the
internet and take care of the entire installation. Manual installation
from downloaded source or repository checkout is also possible, however.
Please note that all the system wide installation commands may require
administrative privileges.


	3.1. Pip
	========

We recommend installation with pip[4] because it makes upgrades and
uninstallation very easy.
Simply run pip with the default pypi.python.org as package source:

  pip install cphhpctoolbox

Alternatively you can point pip to a specific version:

  pip install https://pypi.python.org/packages/source/c/cphhpctoolbox/cphhpctoolbox-0.0.2.zip

If for some reason you can't or don't want to install globally on your
system with pip you may still be able to use virtualenv[5] to
install with pip but in an isolated environment.


	3.2. Easy_install
	=================

If you do not have access to pip, easy_install[6] provides the second 
best choice. 
Simply run easy_install with the default pypi.python.org as package source:

  easy_install cphhpctoolbox

Alternatively you can point easy_install to a specific version:

  easy_install https://pypi.python.org/packages/source/c/cphhpctoolbox/cphhpctoolbox-0.0.2.zip


	3.3. Manual Installation
	========================

If you do not have access to pip and easy_install or if you want more
control over the install process you can use the traditional Python
setup method.
First download the source code archive or check out a version from the
repository. Then run setup as usual:

  python setup.py install

or add any additional options to the command in order to tweak the
installation.


  4. Run from Source
  ==================

It is also possible to run the toolbox applications directly from source
code without installing. Three steps are required to use this setup:

 1. Download the source code archive from the internet
 2. Unpack the archive somewhere
 3. Set the PYTHONPATH environment to the unpacked directory path

Now you can run the applications using the absolute application paths. 

An ultra short command line example to illustrate it:
  wget https://pypi.python.org/packages/source/c/cphhpctoolbox/cphhpctoolbox-0.0.2.zip
  unzip cphhpctoolbox-0.0.2.zip
  export PYTHONPATH=${PWD}/cphhpctoolbox-0.0.2
  python -c 'import cphhpc; print cphhpc.__doc__'
  python cphhpctoolbox-0.0.2/examples/gauss2dfilt_test.py
  python cphhpctoolbox-0.0.2/examples/med2dfilt_test.py
  python cphhpctoolbox-0.0.2/examples/sobel2dfilt_test.py
  python cphhpctoolbox-0.0.2/examples/convolve2dfilt_test.py



  5. Upgrade
  ==========

Upgrading is very simple if you installed the toolbox with pip or
easy_install. Simply run the install command again with the
--upgrade flag like:

  pip install --upgrade cphhpctoolbox

or

  easy_install --upgrade cphhpctoolbox

respectively.
If you installed manually from source you may be able to simply repeat
the installation procedure with the updated source, but we recommend
that you follow the instructions in the Uninstallation section to remove
any old leftovers before repeating the install steps. 


  6. Uninstallation
  =================

In case you installed with pip it is very simple to uninstall the
toolbox again:

  pip uninstall cphhpctoolbox

For easy_install and manual installations it is more cumbersome because
manual removal of the installed files is required. You will find
installed scripts in /usr/local/bin and libraries in your python
site-packages or dist-packages directories by default. You can probably
just delete them to remove the toolbox, but please refer to e.g. [7] for
details about the process of cleaning up after manually or
easy_install'ed packages.

If you only ran the toolbox applications from unpacked source you can
simply delete the unpacked cphhpctoolbox directory to completely remove
the toolbox.


  7. Using the toolbox
  ====================

Basic instructions are included in the instructions file available in the
doc folder.


  8. Questions and Feedback
  =========================

Questions, contributions and comments are always welcome. Just write to
martin DOT rehr AT gmail DOT com or one of the other developers listed
at the official web site.


  9. External References
  ======================

 1. http://www.python.org/
 2. http://numpy.scipy.org/
 3. http://mathema.tician.de/software/pyopencl
 4. http://pypi.python.org/pypi/pip
 5. http://pypi.python.org/pypi/virtualenv
 6. http://packages.python.org/distribute/easy_install.html
 7. http://thingsilearned.com/2009/04/13/easy_install-uninstalling/

