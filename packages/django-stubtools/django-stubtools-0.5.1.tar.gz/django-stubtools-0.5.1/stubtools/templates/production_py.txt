from base import *

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
#         'NAME': 'database.sqlite',                      # Or path to database file if using sqlite3.
#         'USER': '',                      # Not used with sqlite3.
#         'PASSWORD': '',                  # Not used with sqlite3.
#         'HOST': '',                      # Set to empty string for localhost. Not used with sqlite3.
#         'PORT': '',                      # Set to empty string for default. Not used with sqlite3.
#     }
# }

PRODUCTION_ONLY_APPS = (
)

INSTALLED_APPS = PRODUCTION_ONLY_APPS + INSTALLED_APPS

########## STORAGE CONFIGURATION
# INSTALLED_APPS += ('storages', )

# DEFAULT_FILE_STORAGE = 'storages.backends.s3boto.S3BotoStorage'
# STATICFILES_STORAGE = 'storages.backends.s3boto.S3BotoStorage'

# AWS_QUERYSTRING_AUTH = False

# AWS_HEADERS = {
#     'Expires': 'Thu, 15 Apr 2020 20:00:00 GMT',
#     'Cache-Control': 'max-age=86400',
# }

# #Boto requires subdomain formatting.
# from S3 import CallingFormat
# AWS_CALLING_FORMAT = CallingFormat.SUBDOMAIN

# Amazon S3 configuration.
# if 'AWS_ACCESS_KEY_ID' in os.environ:
#     AWS_ACCESS_KEY_ID = os.environ['AWS_ACCESS_KEY_ID']
# else:
#     raise Exception('Missing AWS_ACCESS_KEY_ID')

# if 'AWS_SECRET_ACCESS_KEY' in os.environ:
#     AWS_SECRET_ACCESS_KEY = os.environ['AWS_SECRET_ACCESS_KEY']
# else:
#     raise Exception('Missing AWS_SECRET_ACCESS_KEY')

# AWS_STORAGE_BUCKET_NAME = 'bevlog'

# STATIC_URL = 'https://s3.amazonaws.com/bevlog/'
# MEDIA_URL = STATIC_URL
########## END STORAGE CONFIGURATION

