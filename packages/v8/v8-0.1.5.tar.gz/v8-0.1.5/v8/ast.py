import _v8

class AST:
    Scope = _v8.AstScope
    VarMode = _v8.AstVariableMode
    Var = _v8.AstVariable
    Label = _v8.AstLabel
    NodeType = _v8.AstNodeType
    Node = _v8.AstNode
    Statement = _v8.AstStatement
    Expression = _v8.AstExpression
    Breakable = _v8.AstBreakableStatement
    Block = _v8.AstBlock
    Declaration = _v8.AstDeclaration
    VariableDeclaration = _v8.AstVariableDeclaration
    Module = _v8.AstModule
    ModuleDeclaration = _v8.AstModuleDeclaration
    ModuleLiteral = _v8.AstModuleLiteral
    ModuleVariable = _v8.AstModuleVariable
    ModulePath = _v8.AstModulePath
    Iteration = _v8.AstIterationStatement
    DoWhile = _v8.AstDoWhileStatement
    While = _v8.AstWhileStatement
    For = _v8.AstForStatement
    ForIn = _v8.AstForInStatement
    ExpressionStatement = _v8.AstExpressionStatement
    Continue = _v8.AstContinueStatement
    Break = _v8.AstBreakStatement
    Return = _v8.AstReturnStatement
    With = _v8.AstWithStatement
    Case = _v8.AstCaseClause
    Switch = _v8.AstSwitchStatement
    Try = _v8.AstTryStatement
    TryCatch = _v8.AstTryCatchStatement
    TryFinally = _v8.AstTryFinallyStatement
    Debugger = _v8.AstDebuggerStatement
    Empty = _v8.AstEmptyStatement
    Literal = _v8.AstLiteral
    MaterializedLiteral = _v8.AstMaterializedLiteral
    PropertyKind = _v8.AstPropertyKind
    ObjectProperty = _v8.AstObjectProperty
    Object = _v8.AstObjectLiteral
    RegExp = _v8.AstRegExpLiteral
    Array = _v8.AstArrayLiteral
    VarProxy = _v8.AstVariableProxy
    Property = _v8.AstProperty
    Call = _v8.AstCall
    CallNew = _v8.AstCallNew
    CallRuntime = _v8.AstCallRuntime
    Op = _v8.AstOperation
    UnaryOp = _v8.AstUnaryOperation
    BinOp = _v8.AstBinaryOperation
    CountOp = _v8.AstCountOperation
    CompOp = _v8.AstCompareOperation
    Conditional = _v8.AstConditional
    Assignment = _v8.AstAssignment
    Throw = _v8.AstThrow
    Function = _v8.AstFunctionLiteral
    NativeFunction = _v8.AstNativeFunctionLiteral
    This = _v8.AstThisFunction
