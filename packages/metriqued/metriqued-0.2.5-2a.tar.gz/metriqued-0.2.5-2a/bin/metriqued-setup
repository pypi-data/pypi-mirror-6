#!/usr/bin/env python
# Author: "Chris Ward <cward@redhat.com>

from functools import partial
from pprint import PrettyPrinter
from os.path import isfile
from subprocess import call

pp = PrettyPrinter(indent=2)

from metriqued.tornadohttp import TornadoHTTPServer

prompter = lambda x: raw_input(x)

s = TornadoHTTPServer()

print 'Metrique Config: '
pp.pprint(s.mconf.config)

_p = "Metrique Hostname/IP (ie, this server): "
s.mconf.setup_basic('host', partial(prompter, _p))

_p = "Enable authentication? "
auth_enabled = False
if not s.mconf.yes_no_prompt(_p):
    s.mconf.auth = False
else:
    s.mconf.auth = True
    auth_enabled = True

    _p = "Metrique admin password: "
    s.mconf.setup_basic('admin_password', partial(prompter, _p))

_p = "Enable SSL? "
if not (auth_enabled or s.mconf.yes_no_prompt(_p)):
    s.mconf.ssl = False
else:
    s.mconf.ssl = True

    ssl_created = False
    if not (isfile(s.mconf.ssl_certificate) and
            isfile(s.mconf.ssl_certificate_key)):
        _p = "Create a new default, self-signed SSL Certificate + Key? "
        _bool = s.mconf.yes_no_prompt(_p)
        if _bool:
            print "Generating self-signed certificate:"
            call(['openssl', 'req', '-x509', '-newkey', 'rsa:2048', '-keyout',
                  s.mconf.ssl_certificate_key, '-nodes', '-out',
                  s.mconf.ssl_certificate])
            ssl_created = True

    if not ssl_created:
        print 'SSL Cert found: %s' % s.mconf.ssl_certificate
        print 'SSL Cert Key found: %s' % s.mconf.ssl_certificate_key
        _p = "Path to Metrique SSL Certificate: "
        s.mconf.setup_basic('ssl_certificate', partial(prompter, _p))

        _p = "Path to Metrique SSL Certificate Key: "
        s.mconf.setup_basic('ssl_certificate_key',
                            partial(prompter, _p))

print '\n\nMongoDB Config: '
_p = "MongoDB Host: "
s.dbconf.setup_basic('host', partial(prompter, _p))

_p = "MongoDB Admin password: "
s.dbconf.setup_basic('admin_password', partial(prompter, _p))

_p = "MongoDB Data password: "
s.dbconf.setup_basic('data_password', partial(prompter, _p))

print '\nConfig state after changes: '
print 'Metrique:'
pp.pprint(s.mconf.config)

print 'MongoDB:'
pp.pprint(s.dbconf.config)

a = s.mconf.yes_no_prompt('Save? ')
if a:
    s.mconf.save()
    s.dbconf.save()
