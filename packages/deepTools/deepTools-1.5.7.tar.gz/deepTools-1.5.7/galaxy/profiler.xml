<tool id="deeptools_profiler" name="profiler" version="1.0.4">
    <description>
        creates a profile plot for a score associated to genomic regions
    </description>
    <expand macro="requirements" />
    <expand macro="stdio" />
    <macros>
        <token name="@BINARY@">profiler</token>
        <import>deepTools_macros.xml</import>
    </macros>
    <command>
        profiler

        --matrixFile $matrixFile
        --outFileName $outFileName

        #if $output.showOutputSettings == "yes"
            --plotFileFormat $output.outFileFormat

            #if $output.saveData:
                --outFileNameData '$outFileNameData' 
            #end if

            #if $output.saveSortedRegions:
                --outFileSortedRegions '$outFileSortedRegions'
            #end if
        #else
            --plotFileFormat 'png'
        #end if

        #if $scaleRegions.showScaleRegionsOpt == "yes":
            --startLabel $scaleRegions.startLabel
            --endLabel $scaleRegions.endLabel
        #end if

        #if $advancedOpt.showAdvancedOpt == "yes":
            #if $advancedOpt.averageType:
                --averageType '$advancedOpt.averageType'
            #end if
            --plotHeight $advancedOpt.plotHeight
            --plotWidth $advancedOpt.plotWidth
            --plotType $advancedOpt.plotType

            --regionsLabel '$advancedOpt.regionsLabel'

            #if str($advancedOpt.plotTitle).strip() != "":
                --plotTitle '$advancedOpt.plotTitle'
            #end if

            #if str($advancedOpt.colors).strip() != "":
                --colors #echo ' '.join( ["'%s'" % $color for $color in $advancedOpt.colors.split()] )#
            #end if

            $advancedOpt.onePlotPerGroup

            #if $advancedOpt.yMin:
                --yMin $advancedOpt.yMin
            #end if
            #if $advancedOpt.yMax:
                --yMax $advancedOpt.yMax
            #end if

            --xAxisLabel '$advancedOpt.xAxisLabel'
            #if str($advancedOpt.yAxisLabel.value) != "None":
                --yAxisLabel '$advancedOpt.yAxisLabel'
            #end if

            @kmeans_clusterin@

        #end if
    </command>
    <inputs>
        <param name="matrixFile" format="bgzip" type="data" label="Matrix file from the computeMatrix tool"/>
        <conditional name="scaleRegions">
            <param name="showScaleRegionsOpt" type="select" label="The input matrix was computed in scale-regions mode">
                <option value="no" selected="true">no</option>
                <option value="yes">yes</option>
            </param>
            <when value="no" />
            <when value="yes">
                <param name="startLabel" type="text" value="TSS" size="10" label="Label for the region start" help ="[only for scale-regions mode] Label shown in the plot for the start of the region. Default is TSS (transcription start site), but could be changed to anything, e.g. &quot;peak start&quot;." />
                <param name="endLabel" type="text" value="TES" size="10" label="Label for the region end" help="[only for scale-regions mode] Label shown in the plot for the region end. Default is TES (transcription end site)."/>
            </when>
        </conditional>

        <expand macro="input_graphic_output_settings">
            <expand macro="input_image_file_format" />
        </expand>

        <conditional name="advancedOpt">
            <param name="showAdvancedOpt" type="select" label="Show advanced options" >
                <option value="no" selected="true">no</option>
                <option value="yes">yes</option>
            </param>
            <when value="no" />
            <when value="yes">
                <param name="averageType" type="select" label="Define the type of statistic that should be used for the profile.">
                    <option value="mean" selected="true">mean</option>
                    <option value="median">median</option>
                    <option value="min">min</option>
                    <option value="max">max</option>
                    <option value="sum">sum</option>
                    <option value="std">std</option>
                </param>
                <param name="plotHeight" type="integer" value="5" min="3" 
                    label="Plot height" 
                    help="Height in cm. The default for the plot height is 5 centimeters. The minimum value is 3 cm." />
                <param name="plotWidth" type="integer" value="8" min="1" 
                    label="Plot width" 
                    help="Width in cm. The default value is 8 centimeters. The minimum value is 1 cm." />
                <param name="plotType" type="select" label="Plot type"
                    help="For the summary plot (profile) only. The &quot;lines&quot; option will plot the profile line based on the average type selected. The &quot;fill&quot; option fills the region between zero and the profile curve. The fill in color is semi transparent to distinguish different profiles. The &quot;add standard error&quot; option colors the region between the profile and the standard error of the data. As in the case of fill, a semi-transparent color is used. The option &quot;overlapped_lines&quot; plots each region values, one on top of the other; this option only works if &quot;one plot per proup&quot; is set.">
                    <option value="lines" selected="true">lines</option>
                    <option value="fill">fill</option>
                    <option value="se">add standard error</option>
                    <option value="overlapped_lines">overlapped lines</option>
                </param>
                <param name="regionsLabel" type="text" value="genes" size="30" label="Labels for the regions plotted in the heatmap" help="If more than one region is being plotted a list of labels separated by comma and limited by quotes, is required. For example, &quot;label1, label2&quot;."/>
                <param name="plotTitle" type="text" value="" size="30" label="Title of the plot" help="Title of the plot, to be printed on top of the generated image. Leave blank for no title." />
                <param name="colors" type="text" value="" size="40" label="List of colors to use for the plotted lines" help="Color names and html hex strings (e.g. #eeff22) are accepted. The color names should be given separated by spaces. (--colors red blue green)">
                    <validator type="expression" message="Only numbers, digits, '#' and spaces are allowed.">all(c in ' #abcdefghijklmnopqrstuvwxyz0123456789' for c in value)</validator>
                </param>

                <param name="onePlotPerGroup" type="boolean" truevalue="--onePlotPerGroup" falsevalue="" label="Do one plot per group" help="When the region file contains groups separated by &quot;#&quot;, the default is to plot the averages for the distinct plots in one plot. If this option is set, each group will get its own plot, stacked on top of each other."/>
                <param name="yMin" type="float" value="" size="3" label="Minimum value for the Y-axis of the summary plot. Leave empty for automatic values" optional="true"/>
                <param name="yMax" type="float" value="" size="3" label="Maximum value for Y-axis of the summary plot. Leave empty for automatic values" optional="true"/>
                <param name="xAxisLabel" type="text" value="gene distance (bp)" size="50" label="Description for the x-axis label" />
                <param name="yAxisLabel" type="text" value="" size="50" label="Description for the y-axis label for the top panel" />

                <expand macro="kmeans_clustering" />

            </when>
        </conditional>
    </inputs>
    <outputs>
        <expand macro="output_image_file_format" />
        <expand macro="output_graphic_outputs" />
    </outputs>
    <help>

**What it does**

This tool plots the average enrichments over all genomic
regions supplied to computeMarix. It requires that computeMatrix was successfully run.
It is a very useful complement to the heatmapper, especially in cases when you want to
compare the scores for many different groups. Like heatmapper, profiler does not change the
values that were compute by computeMatrix, but you can choose between
many different ways to color and display the plots.


.. image:: $PATH_TO_IMAGES/visual_profiler_DmelPolII.png
   :alt: Meta-gene profile of Rna Polymerase II


You can find more details on the profiler wiki page: https://github.com/fidelram/deepTools/wiki/Visualizations#wiki-profiler


-----

@REFERENCES@

    </help>
</tool>
