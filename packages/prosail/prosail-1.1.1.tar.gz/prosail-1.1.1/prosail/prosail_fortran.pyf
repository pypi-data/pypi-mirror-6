!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module prosail ! in 
    interface  ! in :prosail
        module mod_dataspec_p5b ! in :prosail:dataSpec_P5B.f90
            real*8 dimension(2101) :: k_cm
            integer*4 :: i
            real*8 dimension(2101) :: ed
            real*8 dimension(2101) :: refractive
            real*8 dimension(2101) :: rsoil2
            real*8 dimension(2101) :: rsoil1
            real*8 dimension(2101) :: k_brown
            real*8 dimension(2101) :: k_car
            real*8 dimension(2101) :: k_cw
            real*8 dimension(2101) :: k_cab
            integer*4 dimension(2101) :: lambda
            real*8 dimension(2101) :: es
            integer, parameter,optional :: nw=2101
        end module mod_dataspec_p5b
        subroutine run_prosail(n,cab,car,cbrown,cw,cm,lai,lidfa,lidfb,rsoil,psoil,hspot,tts,tto,psi,typelidf,retval) ! in :prosail:run_prosail.f90
            use mod_sail
            use mod_angle
            use mod_flag_util
            use mod_dataspec_p5b
            use mod_output_prospect
            use mod_staticvar
            real*8 intent(in) :: n
            real*8 intent(in) :: cab
            real*8 intent(in) :: car
            real*8 intent(in) :: cbrown
            real*8 intent(in) :: cw
            real*8 intent(in) :: cm
            real*8 intent(in) :: lai
            real*8 intent(in) :: lidfa
            real*8 intent(in) :: lidfb
            real*8 intent(in) :: rsoil
            real*8 intent(in) :: psoil
            real*8 intent(in) :: hspot
            real*8 intent(in) :: tts
            real*8 intent(in) :: tto
            real*8 intent(in) :: psi
            integer intent(in) :: typelidf
            real*8 dimension(2101),intent(out) :: retval
        end subroutine run_prosail
        subroutine prospect_5b(n,cab,car,cbrown,cw,cm,rt) ! in :prosail:prospect_5B.f90
            use mod_dataspec_p5b
            real*8 intent(in) :: n
            real*8 intent(in) :: cab
            real*8 intent(in) :: car
            real*8 intent(in) :: cbrown
            real*8 intent(in) :: cw
            real*8 intent(in) :: cm
            real*8 dimension(2101,2),intent(out) :: rt
        end subroutine prospect_5b
        subroutine dladgen(a,b,freq) ! in :prosail:dladgen.f
            real*8 :: a
            real*8 :: b
            real*8 dimension(13) :: freq
        end subroutine dladgen
        function dcum(a,b,t) ! in :prosail:dladgen.f
            real*8 :: a
            real*8 :: b
            real*8 :: t
            real*8 :: dcum
        end function dcum
        subroutine campbell(n,ala,freq) ! in :prosail:LIDF.f90
            integer*4, optional,check(len(freq)>=n),depend(freq) :: n=len(freq)
            real*8 :: ala
            real*8 dimension(n) :: freq
        end subroutine campbell
        subroutine calc_lidf_ellipsoidal(na,alpha,freqvar) ! in :prosail:LIDF.f90
            integer*4, optional,check(len(freqvar)>=na),depend(freqvar) :: na=len(freqvar)
            real*8 :: alpha
            real*8 dimension(na) :: freqvar
        end subroutine calc_lidf_ellipsoidal
        module mod_angle ! in :prosail:MODULE_PRO4SAIL.f90
            real*8, save :: rd
            real*8, save :: pi
        end module mod_angle
        module mod_staticvar ! in :prosail:MODULE_PRO4SAIL.f90
            real*8, save,allocatable,dimension(:) :: vb
            real*8, save :: sob
            real*8, save,allocatable,dimension(:) :: vf
            real*8, save :: sof
            real*8, save :: dof
            real*8, save,allocatable,dimension(:) :: lidf
            real*8, save,allocatable,dimension(:) :: m
            real*8, save :: sdf
            real*8, save,allocatable,dimension(:) :: sigb
            real*8, save :: sdb
            real*8, save,allocatable,dimension(:) :: sb
            real*8, save,allocatable,dimension(:) :: rinf
            real*8, save :: ctscto
            real*8, save :: cts
            real*8, save :: dob
            real*8, save :: ko
            real*8, save,allocatable,dimension(:) :: sf
            real*8, save :: ks
            real*8, save :: dso
            real*8, save,allocatable,dimension(:) :: att
            real*8, save,allocatable,dimension(:) :: w
            real*8, save,allocatable,dimension(:) :: m2
            real*8, save :: ddb
            real*8, save :: sumint
            real*8, save :: cto
            real*8, save :: ddf
        end module mod_staticvar
        module mod_output_prospect ! in :prosail:MODULE_PRO4SAIL.f90
            real*8, save,allocatable,dimension(:) :: tau
            real*8, save,allocatable,dimension(:,:) :: lrt
            real*8, save,allocatable,dimension(:) :: rho
        end module mod_output_prospect
        module mod_flag_util ! in :prosail:MODULE_PRO4SAIL.f90
            real*8, save,allocatable,dimension(:) :: rsoil_old
            logical :: delta_soil
            logical :: delta_skyl
            real*8, save :: cw_old
            real*8, save :: cbrown_old
            logical :: delta_lai
            real*8, save :: psi_old
            real*8, save :: tto_old
            real*8, save :: lidfa_old
            logical dimension(7) :: flag
            logical :: delta_geom
            real*8, save :: tts_old
            real*8, save :: skyl_old
            logical :: init_completed0
            real*8, save :: q_old
            logical :: delta_hot
            real*8, save :: cm_old
            real*8, save :: cab_old
            logical :: init_completed
            logical :: delta_leaf
            real*8, save :: n_old
            logical :: delta_lidf
            real*8, save :: lidfb_old
            real*8, save,allocatable,dimension(:) :: lidf_old
            real*8, save :: car_old
            real*8, save :: lai_old
        end module mod_flag_util
        module mod_sail ! in :prosail:MODULE_PRO4SAIL.f90
            real*8, save,allocatable,dimension(:) :: rso
            real*8, save,allocatable,dimension(:) :: tdo
            real*8, save,allocatable,dimension(:) :: rsd
            real*8, save,allocatable,dimension(:) :: tdd
            real*8, save,allocatable,dimension(:) :: rsdt
            real*8, save,allocatable,dimension(:) :: rdot
            real*8, save,allocatable,dimension(:) :: rsodt
            real*8, save,allocatable,dimension(:) :: rsod
            real*8, save,allocatable,dimension(:) :: tso
            real*8, save :: tsstoo
            real*8, save,allocatable,dimension(:) :: rddt
            real*8, save,allocatable,dimension(:) :: rsost
            real*8, save,allocatable,dimension(:) :: tsd
            real*8, save,allocatable,dimension(:) :: rsot
            real*8, save,allocatable,dimension(:) :: rdd
            real*8, save :: too
            real*8, save,allocatable,dimension(:) :: rsos
            real*8, save,allocatable,dimension(:) :: rdo
            real*8, save :: tss
        end module mod_sail
        subroutine pro4sail(n,cab,car,cbrown,cw,cm,lidfa,lidfb,typelidf,lai,q,tts,tto,psi,rsoil) ! in :prosail:PRO4SAIL.f90
            use mod_sail
            use mod_angle
            use mod_flag_util
            use mod_dataspec_p5b
            use mod_output_prospect
            use mod_staticvar
            real*8 intent(in) :: n
            real*8 intent(in) :: cab
            real*8 intent(in) :: car
            real*8 intent(in) :: cbrown
            real*8 intent(in) :: cw
            real*8 intent(in) :: cm
            real*8 intent(in) :: lidfa
            real*8 intent(in) :: lidfb
            integer*4 intent(in) :: typelidf
            real*8 intent(in) :: lai
            real*8 intent(in) :: q
            real*8 intent(in) :: tts
            real*8 intent(in) :: tto
            real*8 intent(in) :: psi
            real*8 dimension(2101),intent(in) :: rsoil
        end subroutine pro4sail
        subroutine jfunc1(k,l,t,jout) ! in :prosail:PRO4SAIL.f90
            use mod_dataspec_p5b
            real*8 intent(in) :: k
            real*8 dimension(2101),intent(in) :: l
            real*8 intent(in) :: t
            real*8 dimension(2101),intent(out) :: jout
        end subroutine jfunc1
        subroutine jfunc2(k,l,t,jout) ! in :prosail:PRO4SAIL.f90
            use mod_dataspec_p5b
            real*8 intent(in) :: k
            real*8 dimension(2101),intent(in) :: l
            real*8 intent(in) :: t
            real*8 dimension(2101),intent(out) :: jout
        end subroutine jfunc2
        function jfunc3(k,l,t) ! in :prosail:PRO4SAIL.f90
            use mod_dataspec_p5b
            real*8 :: k
            real*8 :: l
            real*8 :: t
            real*8 :: jfunc3
        end function jfunc3
        subroutine tav_abs(theta,refr,res) ! in :prosail:tav_abs.f90
            use mod_dataspec_p5b
            real*8 intent(in) :: theta
            real*8 dimension(2101),intent(in) :: refr
            real*8 dimension(2101),intent(out) :: res
        end subroutine tav_abs
        subroutine volscatt(tts,tto,psi,ttl,chi_s,chi_o,frho,ftau) ! in :prosail:volscatt.f90
            use mod_angle
            real*8 intent(in) :: tts
            real*8 intent(in) :: tto
            real*8 intent(in) :: psi
            real*8 intent(in) :: ttl
            real*8 intent(inout) :: chi_s
            real*8 intent(inout) :: chi_o
            real*8 intent(inout) :: frho
            real*8 intent(inout) :: ftau
        end subroutine volscatt
    end interface 
end python module prosail

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
