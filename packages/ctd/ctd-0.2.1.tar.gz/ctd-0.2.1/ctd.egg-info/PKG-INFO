Metadata-Version: 1.1
Name: ctd
Version: 0.2.1
Summary: Tools to load hydrographic data as DataFrames
Home-page: http://pypi.python.org/pypi/ctd/
Author: Filipe Fernandes
Author-email: ocefpaf@gmail.com
License: The MIT License (MIT)

Copyright (c) 2013 Filipe

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
the Software, and to permit persons to whom the Software is furnished to do so,
subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Download-URL: http://pypi.python.org/packages/source/c/ctd/ctd-0.2.1.tar.gz
Description: python-ctd
        ==========
        
        | |Build|
        | |Build|
        | |Downloads|
        
        Tools to load hydrographic data into pandas DataFrame (and some
        rudimentary methods for data pre-processing/analysis).
        
        | This module can load `SeaBird CTD
        (CNV) <http://www.seabird.com/software/SBEDataProcforWindows.htm>`__,
        `Sippican XBT (EDF) <http://www.sippican.com/>`__,
        | and `Falmouth CTD (ASCII) <http://www.falmouth.com/>`__ formats.
        
        Quick intro
        -----------
        
        .. code:: bash
        
             pip install ctd
        
        .. code:: python
           :number-lines:
        
            from ctd import DataFrame
            cast = DataFrame.from_cnv('./test/data/CTD/g01l06s01.cnv.gz', compression='gzip')
            downcast, upcast = cast.split()
            fig, ax = downcast['t090C'].plot()
        
        |image3|
        
        We can do
        `better <http://www.go-ship.org/Manual/McTaggart_et_al_CTD.pdf>`__:
        
        .. code:: python
           :number-lines:
        
            from ctd import DataFrame, lp_filter, movingaverage
            cast = DataFrame.from_cnv('./test/data/CTD/g01l06s01.cnv.gz', compression='gzip', below_water=True)
            downcast, upcast = cast.split()
            temperature = downcast['t090C'].despike(n1=2, n2=20, block=100)
            temperature.index = lp_filter(temperature.index.values, sample_rate=24.0, time_constant=0.15)
            temperature = temperature.bindata(delta=1)
            temperature = temperature.interpolate()
            temperature = temperature.smooth(window_len=21, window='hanning')
            fig, ax = temperature.plot()
            ax.axis([0, 30, 2000, 0])
            ax.set_ylabel("Pressure [dbar]")
            ax.set_xlabel(u'Temperature [\u00b0C]')
        
        |image4|
        
        Not so quick intro
        ------------------
        
        `Check out the IPython
        Notebook. <http://nbviewer.ipython.org/urls/raw.github.com/ocefpaf/python4oceanographers/master/content/downloads/notebooks/ctd_proc_example.ipynb>`__
        
        Author
        ------
        
        Filipe Fernandes
        
        .. |Build| image:: https://badge.fury.io/py/ctd.png
           :target: http://badge.fury.io/py/ctd
        .. |Build| image:: https://api.travis-ci.org/ocefpaf/python-ctd.png?branch=master
           :target: https://travis-ci.org/ocefpaf/python-ctd
        .. |Downloads| image:: https://pypip.in/d/ctd/badge.png
           :target: https://crate.io/packages/ctd/
        .. |image3| image:: ./docs/readme_01.png
        .. |image4| image:: ./docs/readme_02.png
        
        Version 0.1.0
        * First version derived from oceans package.
        
Keywords: oceanography,data analysis,cnv,DataFrame
Platform: any
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Education
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Education
Classifier: Topic :: Software Development :: Libraries :: Python Modules
