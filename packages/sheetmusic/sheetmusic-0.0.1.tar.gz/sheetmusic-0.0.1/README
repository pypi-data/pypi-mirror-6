## Weird features
Darker text produces louder notes.

## Bars
If you set the time signature (meter), there will be as many
notes in a bar as the first number, and each note will be the
length specified by the (inverse of the) second number.

If you set no time signature, horizontal borders will be used
as the breaks between bars.

You can also set just the second number of the meter
to indicate the length of a cell; if you don't set it,
the default of 4 (quarter note) will be used.

## Slurred and tied notes
Sheetmusic produces pure sounds; within a spreadsheet cell,
there is no variation in pitch or dynamic. Thus, the concept
of slurred and tied notes is unnecessary. That is, two tied
or slurred notes sound the same as two not-slurred notes.

(add examples with normal sheet music)

You can create an effect like slurred and tied notes by
breaking your song into more rows and introducing variation.
For example, break your song into thirty-second notes instead
of quarter notes, and make the first thirty-second note a bit
louder; this will be like you're pressing down on a piano key
anew rather than holding it down.

## Glissando
Create a glissando effect by setting the cells of interest to the
same background color. Pitches are interpolated between any cells
that contain notes, and empty cells in the region are ignored.

## Development
Helpful links

* http://www.ha19.no/gnumeric/
* http://www.hep.by/gnu/gnumeric/sect-extending-python-writing.shtml

This requires Python 2 because mingus requires Python 2.

* http://code.google.com/p/mingus/wiki/tutorialExtraLilypond
* http://code.google.com/p/mingus/wiki/tutorialMidiFileOut

## Installing
Install lilypond, fluidsynth, gnumeric, maybe something else. Then

    make install

## To do

* Separate stuff into a separate package that doesn't depend on Gnumeric;
    this way, it'll be easier to test.
* Mock the Gnumeric module for testing and whatnot
* Anonymous functions `call(string_function, *args)`
* `=play`, `=loop`, `=sheetmusic`
