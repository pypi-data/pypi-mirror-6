// Generated by Pdef Objective-C generator.

#import <Foundation/Foundation.h>
#import "PDef.h"
{# Import the base header if it is a message and it has a base #}
{% if definition.is_message and definition.base %}
#import "{{ definition.base|objc_name }}.h"
{% endif %}
{# Import enum headers, forward reference other referenced types. #}
{%- for type0 in definition.referenced_types %}
    {% if type0.is_enum %}
#import "{{ type0|objc_name }}.h"
    {% elif type0.is_message and type0 != definition.base %}
@class {{ type0|objc_name }};
    {% elif type0.is_interface %}
@protocol {{ type0|objc_name }};
    {% else %}
    {% endif %}
{% endfor %}


{% if definition.doc %}
/** {{ definition.doc }} */
{% endif -%}


{% if definition.is_enum %}
typedef NS_ENUM(NSInteger, {{ definition|objc_name }}) {
    {{ definition|objc_name }}_UNDEFINED = 0,
    {% for value in definition.values if value.name != "UNDEFINED" %}
    {{ definition|objc_name }}_{{ value.name }} = {{ loop.index }},
    {% endfor %}
};

PDEnumDescriptor *{{ definition|objc_name }}Descriptor();


{% elif definition.is_message %}
@interface {{ definition|objc_name }} : {{ definition|objc_base }}
    {% for field in definition.declared_fields %}
@property (nonatomic) {{ field.type|objc_type }}{{ field.name }};
    {% endfor %}

{% for field in definition.declared_fields %}
- (BOOL) has{{ field.name|upper_first }};
- (void) clear{{ field.name|upper_first }};

{% endfor %}

+ (PDMessageDescriptor *)typeDescriptor;
@end


{% else %}
@protocol {{ definition|objc_name }}
    {% for method in definition.declared_methods %}
{% if method.doc %}
/** {{ method.doc }} */
{% endif %}
    {% if not method.args %}
        {% if method.is_terminal %}
- ({{ method.result|objc_result }}) {{ method.name }}Callback:(void (^)(id result, NSError *error))response;
        {% else %}
- ({{ method.result|objc_result }}) {{ method.name }};
        {% endif %}
    {% else %}
        {% set first_arg = method.args[0] %}
        {% set remaining_args = method.args[1:] %}
- ({{ method.result|objc_result }}) {{ method.name }}{{ first_arg.name|upper_first }}:({{ first_arg.type|objc_type }}){{ first_arg.name }}
    {% for arg in remaining_args %}
        {{ arg.name }}:({{ arg.type|objc_type }}){{ arg.name }}
    {% endfor %}
        {%- if not method.is_terminal -%}
            ;
        {% else %}
        callback:(PDInvocationCallback)callback;
        {% endif %}
    {% endif %}

    {% endfor %}
@end

@interface {{ definition|objc_name }}Client : PDInterface <{{ definition|objc_name }}>
@end
PDInterfaceDescriptor *{{ definition|objc_name }}Descriptor();
{% endif %}
