Metadata-Version: 1.1
Name: PyICL
Version: 0.6.15
Summary: Exposes the boost.icl interval container library to python
Home-page: http://sysbio.mrc-bsu.cam.ac.uk/johns/PyICL/docs/build/html/
Author: John Reid
Author-email: johnbaronreid@netscape.net
License: BSD
Description: PyICL exposes the boost.icl interval container library to python.
        
        The `boost.icl interval container library
        <http://www.boost.org/doc/libs/1_49_0/libs/icl/doc/html/index.html>`_
        introduces itself as::
            
            Intervals are almost ubiquitous in software development. Yet they are very
            easily coded into user defined classes by a pair of numbers so they are only
            implicitly used most of the time. The meaning of an interval is simple. 
            They represent all the elements between their lower and upper bound and
            thus a set. But unlike sets, intervals usually can not be added to a single
            new interval. If you want to add intervals to a collection of intervals that
            does still represent a set, you arrive at the idea of interval_sets provided
            by this library.
        
            Interval containers of the ICL have been developed initially at Cortex Software 
            GmbH to solve problems related to date and time interval computations in the 
            context of a Hospital Information System. Time intervals with associated values 
            like amount of invoice or set of therapies had to be manipulated in statistics, 
            billing programs and therapy scheduling programs. So the ICL emerged out of 
            those industrial use cases. It extracts generic code that helps to solve common 
            problems from the date and time problem domain and can be beneficial in other 
            fields as well.
        
            One of the most advantageous aspects of interval containers is their very compact 
            representation of sets and maps. Working with sets and maps of elements can be 
            very inefficient, if in a given problem domain, elements are typically occurring 
            in contiguous chunks. Besides a compact representation of associative containers, 
            that can reduce the cost of space and time drastically, the ICL comes with a 
            universal mechanism of aggregation, that allows to combine associated values in 
            meaningful ways when intervals overlap on insertion.
        
        PyICL aims to present most of the functionality of the C++ boost.icl library to python
        users in an intuitive way.
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Classifier: Programming Language :: Python
Classifier: Programming Language :: C++
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Mathematics
Classifier: Topic :: Office/Business
Classifier: Topic :: Utilities
