// This file is part of NameTag.
//
// Copyright 2013 by Institute of Formal and Applied Linguistics, Faculty of
// Mathematics and Physics, Charles University in Prague, Czech Republic.
//
// NameTag is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation, either version 3 of
// the License, or (at your option) any later version.
//
// NameTag is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with NameTag.  If not, see <http://www.gnu.org/licenses/>.

#include "url_detector.h"

namespace ufal {
namespace nametag {


static const short _url_detector_key_offsets[] = {
	0, 0, 15, 29, 41, 54, 63, 71, 
	78, 86, 92, 100, 117, 119, 127, 136, 
	144, 153, 161, 170, 178, 186, 197, 207, 
	215, 223, 234, 244, 252, 260, 271, 281, 
	290, 298, 305, 313, 319, 327, 335, 344, 
	352, 361, 369, 378, 386, 394, 405, 415, 
	423, 431, 442, 452, 460, 468, 479, 489, 
	505, 520, 536, 550, 566, 578, 594, 611, 
	627, 644, 660, 677, 693, 709, 728, 746, 
	762, 778, 797, 815, 831, 847, 866, 884, 
	900, 916, 932, 943, 944, 959, 973, 989, 
	1004, 1020, 1034, 1050, 1066, 1083, 1099, 1116, 
	1132, 1149, 1165, 1181, 1200, 1218, 1234, 1250, 
	1269, 1287, 1303, 1319, 1338, 1356, 1366, 1383, 
	1386, 1396, 1406, 1416, 1426, 1439, 1451, 1461, 
	1471, 1481, 1491, 1501, 1514, 1526, 1543, 1557, 
	1574, 1591, 1608, 1625, 1645, 1664, 1681, 1698, 
	1715, 1732, 1749, 1769
};

static const char _url_detector_trans_keys[] = {
	33, 48, 49, 50, 95, 36, 37, 39, 
	46, 51, 57, 65, 90, 97, 122, 33, 
	58, 64, 95, 36, 37, 39, 46, 48, 
	57, 65, 90, 97, 122, 33, 95, 36, 
	37, 39, 46, 48, 57, 65, 90, 97, 
	122, 33, 64, 95, 36, 37, 39, 46, 
	48, 57, 65, 90, 97, 122, 48, 49, 
	50, 51, 57, 65, 90, 97, 122, 45, 
	46, 48, 57, 65, 90, 97, 122, 45, 
	48, 57, 65, 90, 97, 122, 45, 46, 
	48, 57, 65, 90, 97, 122, 48, 57, 
	65, 90, 97, 122, 45, 46, 48, 57, 
	65, 90, 97, 122, 33, 39, 41, 61, 
	95, 36, 47, 48, 57, 58, 59, 63, 
	64, 65, 90, 97, 122, 48, 57, 45, 
	46, 48, 57, 65, 90, 97, 122, 48, 
	49, 50, 51, 57, 65, 90, 97, 122, 
	45, 46, 48, 57, 65, 90, 97, 122, 
	48, 49, 50, 51, 57, 65, 90, 97, 
	122, 45, 46, 48, 57, 65, 90, 97, 
	122, 48, 49, 50, 51, 57, 65, 90, 
	97, 122, 45, 46, 48, 57, 65, 90, 
	97, 122, 45, 46, 48, 57, 65, 90, 
	97, 122, 45, 46, 53, 48, 52, 54, 
	57, 65, 90, 97, 122, 45, 46, 48, 
	53, 54, 57, 65, 90, 97, 122, 45, 
	46, 48, 57, 65, 90, 97, 122, 45, 
	46, 48, 57, 65, 90, 97, 122, 45, 
	46, 53, 48, 52, 54, 57, 65, 90, 
	97, 122, 45, 46, 48, 53, 54, 57, 
	65, 90, 97, 122, 45, 46, 48, 57, 
	65, 90, 97, 122, 45, 46, 48, 57, 
	65, 90, 97, 122, 45, 46, 53, 48, 
	52, 54, 57, 65, 90, 97, 122, 45, 
	46, 48, 53, 54, 57, 65, 90, 97, 
	122, 48, 49, 50, 51, 57, 65, 90, 
	97, 122, 45, 46, 48, 57, 65, 90, 
	97, 122, 45, 48, 57, 65, 90, 97, 
	122, 45, 46, 48, 57, 65, 90, 97, 
	122, 48, 57, 65, 90, 97, 122, 45, 
	46, 48, 57, 65, 90, 97, 122, 45, 
	46, 48, 57, 65, 90, 97, 122, 48, 
	49, 50, 51, 57, 65, 90, 97, 122, 
	45, 46, 48, 57, 65, 90, 97, 122, 
	48, 49, 50, 51, 57, 65, 90, 97, 
	122, 45, 46, 48, 57, 65, 90, 97, 
	122, 48, 49, 50, 51, 57, 65, 90, 
	97, 122, 45, 46, 48, 57, 65, 90, 
	97, 122, 45, 46, 48, 57, 65, 90, 
	97, 122, 45, 46, 53, 48, 52, 54, 
	57, 65, 90, 97, 122, 45, 46, 48, 
	53, 54, 57, 65, 90, 97, 122, 45, 
	46, 48, 57, 65, 90, 97, 122, 45, 
	46, 48, 57, 65, 90, 97, 122, 45, 
	46, 53, 48, 52, 54, 57, 65, 90, 
	97, 122, 45, 46, 48, 53, 54, 57, 
	65, 90, 97, 122, 45, 46, 48, 57, 
	65, 90, 97, 122, 45, 46, 48, 57, 
	65, 90, 97, 122, 45, 46, 53, 48, 
	52, 54, 57, 65, 90, 97, 122, 45, 
	46, 48, 53, 54, 57, 65, 90, 97, 
	122, 33, 45, 46, 58, 64, 95, 36, 
	37, 39, 44, 48, 57, 65, 90, 97, 
	122, 33, 45, 58, 64, 95, 36, 37, 
	39, 46, 48, 57, 65, 90, 97, 122, 
	33, 45, 46, 58, 64, 95, 36, 37, 
	39, 44, 48, 57, 65, 90, 97, 122, 
	33, 58, 64, 95, 36, 37, 39, 46, 
	48, 57, 65, 90, 97, 122, 33, 45, 
	46, 58, 64, 95, 36, 37, 39, 44, 
	48, 57, 65, 90, 97, 122, 33, 95, 
	36, 37, 39, 46, 48, 57, 65, 90, 
	97, 122, 33, 45, 46, 58, 64, 95, 
	36, 37, 39, 44, 48, 57, 65, 90, 
	97, 122, 33, 48, 49, 50, 58, 64, 
	95, 36, 37, 39, 46, 51, 57, 65, 
	90, 97, 122, 33, 45, 46, 58, 64, 
	95, 36, 37, 39, 44, 48, 57, 65, 
	90, 97, 122, 33, 48, 49, 50, 58, 
	64, 95, 36, 37, 39, 46, 51, 57, 
	65, 90, 97, 122, 33, 45, 46, 58, 
	64, 95, 36, 37, 39, 44, 48, 57, 
	65, 90, 97, 122, 33, 48, 49, 50, 
	58, 64, 95, 36, 37, 39, 46, 51, 
	57, 65, 90, 97, 122, 33, 45, 46, 
	58, 64, 95, 36, 37, 39, 44, 48, 
	57, 65, 90, 97, 122, 33, 45, 46, 
	58, 64, 95, 36, 37, 39, 44, 48, 
	57, 65, 90, 97, 122, 33, 45, 46, 
	53, 58, 64, 95, 36, 37, 39, 44, 
	48, 52, 54, 57, 65, 90, 97, 122, 
	33, 45, 46, 58, 64, 95, 36, 37, 
	39, 44, 48, 53, 54, 57, 65, 90, 
	97, 122, 33, 45, 46, 58, 64, 95, 
	36, 37, 39, 44, 48, 57, 65, 90, 
	97, 122, 33, 45, 46, 58, 64, 95, 
	36, 37, 39, 44, 48, 57, 65, 90, 
	97, 122, 33, 45, 46, 53, 58, 64, 
	95, 36, 37, 39, 44, 48, 52, 54, 
	57, 65, 90, 97, 122, 33, 45, 46, 
	58, 64, 95, 36, 37, 39, 44, 48, 
	53, 54, 57, 65, 90, 97, 122, 33, 
	45, 46, 58, 64, 95, 36, 37, 39, 
	44, 48, 57, 65, 90, 97, 122, 33, 
	45, 46, 58, 64, 95, 36, 37, 39, 
	44, 48, 57, 65, 90, 97, 122, 33, 
	45, 46, 53, 58, 64, 95, 36, 37, 
	39, 44, 48, 52, 54, 57, 65, 90, 
	97, 122, 33, 45, 46, 58, 64, 95, 
	36, 37, 39, 44, 48, 53, 54, 57, 
	65, 90, 97, 122, 33, 45, 46, 58, 
	64, 95, 36, 37, 39, 44, 48, 57, 
	65, 90, 97, 122, 33, 45, 46, 58, 
	64, 95, 36, 37, 39, 44, 48, 57, 
	65, 90, 97, 122, 33, 45, 46, 58, 
	64, 95, 36, 37, 39, 44, 48, 57, 
	65, 90, 97, 122, 33, 47, 95, 36, 
	37, 39, 57, 65, 90, 97, 122, 47, 
	33, 48, 49, 50, 95, 36, 37, 39, 
	46, 51, 57, 65, 90, 97, 122, 33, 
	58, 64, 95, 36, 37, 39, 46, 48, 
	57, 65, 90, 97, 122, 33, 45, 46, 
	58, 64, 95, 36, 37, 39, 44, 48, 
	57, 65, 90, 97, 122, 33, 45, 58, 
	64, 95, 36, 37, 39, 46, 48, 57, 
	65, 90, 97, 122, 33, 45, 46, 58, 
	64, 95, 36, 37, 39, 44, 48, 57, 
	65, 90, 97, 122, 33, 58, 64, 95, 
	36, 37, 39, 46, 48, 57, 65, 90, 
	97, 122, 33, 45, 46, 58, 64, 95, 
	36, 37, 39, 44, 48, 57, 65, 90, 
	97, 122, 33, 45, 46, 58, 64, 95, 
	36, 37, 39, 44, 48, 57, 65, 90, 
	97, 122, 33, 48, 49, 50, 58, 64, 
	95, 36, 37, 39, 46, 51, 57, 65, 
	90, 97, 122, 33, 45, 46, 58, 64, 
	95, 36, 37, 39, 44, 48, 57, 65, 
	90, 97, 122, 33, 48, 49, 50, 58, 
	64, 95, 36, 37, 39, 46, 51, 57, 
	65, 90, 97, 122, 33, 45, 46, 58, 
	64, 95, 36, 37, 39, 44, 48, 57, 
	65, 90, 97, 122, 33, 48, 49, 50, 
	58, 64, 95, 36, 37, 39, 46, 51, 
	57, 65, 90, 97, 122, 33, 45, 46, 
	58, 64, 95, 36, 37, 39, 44, 48, 
	57, 65, 90, 97, 122, 33, 45, 46, 
	58, 64, 95, 36, 37, 39, 44, 48, 
	57, 65, 90, 97, 122, 33, 45, 46, 
	53, 58, 64, 95, 36, 37, 39, 44, 
	48, 52, 54, 57, 65, 90, 97, 122, 
	33, 45, 46, 58, 64, 95, 36, 37, 
	39, 44, 48, 53, 54, 57, 65, 90, 
	97, 122, 33, 45, 46, 58, 64, 95, 
	36, 37, 39, 44, 48, 57, 65, 90, 
	97, 122, 33, 45, 46, 58, 64, 95, 
	36, 37, 39, 44, 48, 57, 65, 90, 
	97, 122, 33, 45, 46, 53, 58, 64, 
	95, 36, 37, 39, 44, 48, 52, 54, 
	57, 65, 90, 97, 122, 33, 45, 46, 
	58, 64, 95, 36, 37, 39, 44, 48, 
	53, 54, 57, 65, 90, 97, 122, 33, 
	45, 46, 58, 64, 95, 36, 37, 39, 
	44, 48, 57, 65, 90, 97, 122, 33, 
	45, 46, 58, 64, 95, 36, 37, 39, 
	44, 48, 57, 65, 90, 97, 122, 33, 
	45, 46, 53, 58, 64, 95, 36, 37, 
	39, 44, 48, 52, 54, 57, 65, 90, 
	97, 122, 33, 45, 46, 58, 64, 95, 
	36, 37, 39, 44, 48, 53, 54, 57, 
	65, 90, 97, 122, 45, 46, 47, 58, 
	48, 57, 65, 90, 97, 122, 33, 39, 
	41, 61, 95, 36, 47, 48, 57, 58, 
	59, 63, 64, 65, 90, 97, 122, 47, 
	48, 57, 45, 46, 47, 58, 48, 57, 
	65, 90, 97, 122, 45, 46, 47, 58, 
	48, 57, 65, 90, 97, 122, 45, 46, 
	47, 58, 48, 57, 65, 90, 97, 122, 
	45, 46, 47, 58, 48, 57, 65, 90, 
	97, 122, 45, 46, 47, 53, 58, 48, 
	52, 54, 57, 65, 90, 97, 122, 45, 
	46, 47, 58, 48, 53, 54, 57, 65, 
	90, 97, 122, 45, 46, 47, 58, 48, 
	57, 65, 90, 97, 122, 45, 46, 47, 
	58, 48, 57, 65, 90, 97, 122, 45, 
	46, 47, 58, 48, 57, 65, 90, 97, 
	122, 45, 46, 47, 58, 48, 57, 65, 
	90, 97, 122, 45, 46, 47, 58, 48, 
	57, 65, 90, 97, 122, 45, 46, 47, 
	53, 58, 48, 52, 54, 57, 65, 90, 
	97, 122, 45, 46, 47, 58, 48, 53, 
	54, 57, 65, 90, 97, 122, 33, 45, 
	46, 47, 58, 64, 95, 36, 37, 39, 
	44, 48, 57, 65, 90, 97, 122, 33, 
	47, 64, 95, 36, 37, 39, 46, 48, 
	57, 65, 90, 97, 122, 33, 45, 46, 
	47, 58, 64, 95, 36, 37, 39, 44, 
	48, 57, 65, 90, 97, 122, 33, 45, 
	46, 47, 58, 64, 95, 36, 37, 39, 
	44, 48, 57, 65, 90, 97, 122, 33, 
	45, 46, 47, 58, 64, 95, 36, 37, 
	39, 44, 48, 57, 65, 90, 97, 122, 
	33, 45, 46, 47, 58, 64, 95, 36, 
	37, 39, 44, 48, 57, 65, 90, 97, 
	122, 33, 45, 46, 47, 53, 58, 64, 
	95, 36, 37, 39, 44, 48, 52, 54, 
	57, 65, 90, 97, 122, 33, 45, 46, 
	47, 58, 64, 95, 36, 37, 39, 44, 
	48, 53, 54, 57, 65, 90, 97, 122, 
	33, 45, 46, 47, 58, 64, 95, 36, 
	37, 39, 44, 48, 57, 65, 90, 97, 
	122, 33, 45, 46, 47, 58, 64, 95, 
	36, 37, 39, 44, 48, 57, 65, 90, 
	97, 122, 33, 45, 46, 47, 58, 64, 
	95, 36, 37, 39, 44, 48, 57, 65, 
	90, 97, 122, 33, 45, 46, 47, 58, 
	64, 95, 36, 37, 39, 44, 48, 57, 
	65, 90, 97, 122, 33, 45, 46, 47, 
	58, 64, 95, 36, 37, 39, 44, 48, 
	57, 65, 90, 97, 122, 33, 45, 46, 
	47, 53, 58, 64, 95, 36, 37, 39, 
	44, 48, 52, 54, 57, 65, 90, 97, 
	122, 33, 45, 46, 47, 58, 64, 95, 
	36, 37, 39, 44, 48, 53, 54, 57, 
	65, 90, 97, 122, 0
};

static const char _url_detector_single_lengths[] = {
	0, 5, 4, 2, 3, 3, 2, 1, 
	2, 0, 2, 5, 0, 2, 3, 2, 
	3, 2, 3, 2, 2, 3, 2, 2, 
	2, 3, 2, 2, 2, 3, 2, 3, 
	2, 1, 2, 0, 2, 2, 3, 2, 
	3, 2, 3, 2, 2, 3, 2, 2, 
	2, 3, 2, 2, 2, 3, 2, 6, 
	5, 6, 4, 6, 2, 6, 7, 6, 
	7, 6, 7, 6, 6, 7, 6, 6, 
	6, 7, 6, 6, 6, 7, 6, 6, 
	6, 6, 3, 1, 5, 4, 6, 5, 
	6, 4, 6, 6, 7, 6, 7, 6, 
	7, 6, 6, 7, 6, 6, 6, 7, 
	6, 6, 6, 7, 6, 4, 5, 1, 
	4, 4, 4, 4, 5, 4, 4, 4, 
	4, 4, 4, 5, 4, 7, 4, 7, 
	7, 7, 7, 8, 7, 7, 7, 7, 
	7, 7, 8, 7
};

static const char _url_detector_range_lengths[] = {
	0, 5, 5, 5, 5, 3, 3, 3, 
	3, 3, 3, 6, 1, 3, 3, 3, 
	3, 3, 3, 3, 3, 4, 4, 3, 
	3, 4, 4, 3, 3, 4, 4, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 4, 4, 3, 
	3, 4, 4, 3, 3, 4, 4, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 6, 6, 5, 
	5, 6, 6, 5, 5, 6, 6, 5, 
	5, 5, 4, 0, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 6, 6, 5, 5, 6, 
	6, 5, 5, 6, 6, 3, 6, 1, 
	3, 3, 3, 3, 4, 4, 3, 3, 
	3, 3, 3, 4, 4, 5, 5, 5, 
	5, 5, 5, 6, 6, 5, 5, 5, 
	5, 5, 6, 6
};

static const short _url_detector_index_offsets[] = {
	0, 0, 11, 21, 29, 38, 45, 51, 
	56, 62, 66, 72, 84, 86, 92, 99, 
	105, 112, 118, 125, 131, 137, 145, 152, 
	158, 164, 172, 179, 185, 191, 199, 206, 
	213, 219, 224, 230, 234, 240, 246, 253, 
	259, 266, 272, 279, 285, 291, 299, 306, 
	312, 318, 326, 333, 339, 345, 353, 360, 
	372, 383, 395, 405, 417, 425, 437, 450, 
	462, 475, 487, 500, 512, 524, 538, 551, 
	563, 575, 589, 602, 614, 626, 640, 653, 
	665, 677, 689, 697, 699, 710, 720, 732, 
	743, 755, 765, 777, 789, 802, 814, 827, 
	839, 852, 864, 876, 890, 903, 915, 927, 
	941, 954, 966, 978, 992, 1005, 1013, 1025, 
	1028, 1036, 1044, 1052, 1060, 1070, 1079, 1087, 
	1095, 1103, 1111, 1119, 1129, 1138, 1151, 1161, 
	1174, 1187, 1200, 1213, 1228, 1242, 1255, 1268, 
	1281, 1294, 1307, 1322
};

static const unsigned char _url_detector_indicies[] = {
	0, 2, 3, 4, 0, 0, 0, 5, 
	6, 6, 1, 0, 7, 8, 0, 0, 
	0, 0, 0, 0, 1, 9, 9, 9, 
	9, 9, 9, 9, 1, 9, 10, 9, 
	9, 9, 9, 9, 9, 1, 11, 12, 
	13, 14, 15, 15, 1, 16, 17, 15, 
	15, 15, 1, 16, 15, 15, 15, 1, 
	16, 18, 15, 15, 15, 1, 15, 19, 
	20, 1, 16, 18, 15, 21, 15, 1, 
	22, 23, 23, 22, 22, 22, 23, 22, 
	22, 23, 23, 1, 24, 1, 16, 18, 
	15, 15, 25, 1, 26, 27, 28, 29, 
	19, 20, 1, 16, 30, 15, 15, 15, 
	1, 31, 32, 33, 34, 19, 20, 1, 
	16, 35, 15, 15, 15, 1, 36, 37, 
	38, 39, 19, 20, 1, 16, 35, 34, 
	15, 15, 1, 16, 35, 31, 15, 15, 
	1, 16, 35, 40, 34, 31, 15, 15, 
	1, 16, 35, 31, 15, 15, 15, 1, 
	16, 30, 29, 15, 15, 1, 16, 30, 
	26, 15, 15, 1, 16, 30, 41, 29, 
	26, 15, 15, 1, 16, 30, 26, 15, 
	15, 15, 1, 16, 17, 14, 15, 15, 
	1, 16, 17, 11, 15, 15, 1, 16, 
	17, 42, 14, 11, 15, 15, 1, 16, 
	17, 11, 15, 15, 15, 1, 43, 44, 
	45, 46, 47, 47, 1, 48, 49, 47, 
	47, 47, 1, 48, 47, 47, 47, 1, 
	48, 50, 47, 47, 47, 1, 47, 51, 
	52, 1, 48, 50, 47, 53, 47, 1, 
	48, 50, 47, 47, 54, 1, 55, 56, 
	57, 58, 51, 52, 1, 48, 59, 47, 
	47, 47, 1, 60, 61, 62, 63, 51, 
	52, 1, 48, 64, 47, 47, 47, 1, 
	65, 66, 67, 68, 51, 52, 1, 48, 
	64, 63, 47, 47, 1, 48, 64, 60, 
	47, 47, 1, 48, 64, 69, 63, 60, 
	47, 47, 1, 48, 64, 60, 47, 47, 
	47, 1, 48, 59, 58, 47, 47, 1, 
	48, 59, 55, 47, 47, 1, 48, 59, 
	70, 58, 55, 47, 47, 1, 48, 59, 
	55, 47, 47, 47, 1, 48, 49, 46, 
	47, 47, 1, 48, 49, 43, 47, 47, 
	1, 48, 49, 71, 46, 43, 47, 47, 
	1, 48, 49, 43, 47, 47, 47, 1, 
	0, 72, 73, 7, 8, 0, 0, 0, 
	74, 74, 74, 1, 0, 72, 7, 8, 
	0, 0, 0, 74, 74, 74, 1, 0, 
	72, 75, 7, 8, 0, 0, 0, 74, 
	74, 74, 1, 0, 7, 8, 0, 0, 
	0, 74, 76, 77, 1, 0, 72, 75, 
	7, 8, 0, 0, 0, 74, 78, 74, 
	1, 9, 9, 9, 9, 79, 9, 9, 
	1, 0, 72, 75, 7, 8, 0, 0, 
	0, 74, 74, 80, 1, 0, 81, 82, 
	83, 7, 8, 0, 0, 0, 84, 76, 
	77, 1, 0, 72, 85, 7, 8, 0, 
	0, 0, 74, 74, 74, 1, 0, 86, 
	87, 88, 7, 8, 0, 0, 0, 89, 
	76, 77, 1, 0, 72, 90, 7, 8, 
	0, 0, 0, 74, 74, 74, 1, 0, 
	91, 92, 93, 7, 8, 0, 0, 0, 
	94, 76, 77, 1, 0, 72, 90, 7, 
	8, 0, 0, 0, 89, 74, 74, 1, 
	0, 72, 90, 7, 8, 0, 0, 0, 
	86, 74, 74, 1, 0, 72, 90, 95, 
	7, 8, 0, 0, 0, 89, 86, 74, 
	74, 1, 0, 72, 90, 7, 8, 0, 
	0, 0, 86, 74, 74, 74, 1, 0, 
	72, 85, 7, 8, 0, 0, 0, 84, 
	74, 74, 1, 0, 72, 85, 7, 8, 
	0, 0, 0, 81, 74, 74, 1, 0, 
	72, 85, 96, 7, 8, 0, 0, 0, 
	84, 81, 74, 74, 1, 0, 72, 85, 
	7, 8, 0, 0, 0, 81, 74, 74, 
	74, 1, 0, 72, 73, 7, 8, 0, 
	0, 0, 5, 74, 74, 1, 0, 72, 
	73, 7, 8, 0, 0, 0, 2, 74, 
	74, 1, 0, 72, 73, 97, 7, 8, 
	0, 0, 0, 5, 2, 74, 74, 1, 
	0, 72, 73, 7, 8, 0, 0, 0, 
	2, 74, 74, 74, 1, 0, 72, 75, 
	7, 8, 0, 0, 0, 74, 98, 98, 
	1, 0, 72, 75, 7, 8, 0, 0, 
	0, 74, 99, 99, 1, 0, 72, 75, 
	100, 8, 0, 0, 0, 74, 99, 99, 
	1, 9, 101, 9, 9, 9, 9, 9, 
	1, 102, 1, 103, 104, 105, 106, 103, 
	103, 103, 107, 108, 108, 1, 103, 7, 
	10, 103, 103, 103, 103, 103, 103, 1, 
	103, 109, 110, 7, 10, 103, 103, 103, 
	108, 108, 108, 1, 103, 109, 7, 10, 
	103, 103, 103, 108, 108, 108, 1, 103, 
	109, 111, 7, 10, 103, 103, 103, 108, 
	108, 108, 1, 103, 7, 10, 103, 103, 
	103, 108, 112, 113, 1, 103, 109, 111, 
	7, 10, 103, 103, 103, 108, 114, 108, 
	1, 103, 109, 111, 7, 10, 103, 103, 
	103, 108, 108, 115, 1, 103, 116, 117, 
	118, 7, 10, 103, 103, 103, 119, 112, 
	113, 1, 103, 109, 120, 7, 10, 103, 
	103, 103, 108, 108, 108, 1, 103, 121, 
	122, 123, 7, 10, 103, 103, 103, 124, 
	112, 113, 1, 103, 109, 125, 7, 10, 
	103, 103, 103, 108, 108, 108, 1, 103, 
	126, 127, 128, 7, 10, 103, 103, 103, 
	129, 112, 113, 1, 103, 109, 125, 7, 
	10, 103, 103, 103, 124, 108, 108, 1, 
	103, 109, 125, 7, 10, 103, 103, 103, 
	121, 108, 108, 1, 103, 109, 125, 130, 
	7, 10, 103, 103, 103, 124, 121, 108, 
	108, 1, 103, 109, 125, 7, 10, 103, 
	103, 103, 121, 108, 108, 108, 1, 103, 
	109, 120, 7, 10, 103, 103, 103, 119, 
	108, 108, 1, 103, 109, 120, 7, 10, 
	103, 103, 103, 116, 108, 108, 1, 103, 
	109, 120, 131, 7, 10, 103, 103, 103, 
	119, 116, 108, 108, 1, 103, 109, 120, 
	7, 10, 103, 103, 103, 116, 108, 108, 
	108, 1, 103, 109, 110, 7, 10, 103, 
	103, 103, 107, 108, 108, 1, 103, 109, 
	110, 7, 10, 103, 103, 103, 104, 108, 
	108, 1, 103, 109, 110, 132, 7, 10, 
	103, 103, 103, 107, 104, 108, 108, 1, 
	103, 109, 110, 7, 10, 103, 103, 103, 
	104, 108, 108, 108, 1, 16, 18, 23, 
	133, 15, 21, 15, 1, 22, 23, 23, 
	22, 22, 22, 23, 22, 22, 23, 23, 
	1, 23, 24, 1, 16, 18, 23, 133, 
	15, 15, 25, 1, 16, 18, 23, 133, 
	15, 15, 15, 1, 16, 18, 23, 133, 
	39, 15, 15, 1, 16, 18, 23, 133, 
	36, 15, 15, 1, 16, 18, 23, 134, 
	133, 39, 36, 15, 15, 1, 16, 18, 
	23, 133, 36, 15, 15, 15, 1, 48, 
	50, 23, 133, 47, 53, 47, 1, 48, 
	50, 23, 133, 47, 47, 54, 1, 48, 
	50, 23, 133, 47, 47, 47, 1, 48, 
	50, 23, 133, 68, 47, 47, 1, 48, 
	50, 23, 133, 65, 47, 47, 1, 48, 
	50, 23, 135, 133, 68, 65, 47, 47, 
	1, 48, 50, 23, 133, 65, 47, 47, 
	47, 1, 0, 72, 75, 23, 136, 8, 
	0, 0, 0, 74, 78, 74, 1, 9, 
	23, 10, 9, 9, 9, 79, 9, 9, 
	1, 0, 72, 75, 23, 136, 8, 0, 
	0, 0, 74, 74, 80, 1, 0, 72, 
	75, 23, 136, 8, 0, 0, 0, 74, 
	74, 74, 1, 0, 72, 75, 23, 136, 
	8, 0, 0, 0, 94, 74, 74, 1, 
	0, 72, 75, 23, 136, 8, 0, 0, 
	0, 91, 74, 74, 1, 0, 72, 75, 
	23, 137, 136, 8, 0, 0, 0, 94, 
	91, 74, 74, 1, 0, 72, 75, 23, 
	136, 8, 0, 0, 0, 91, 74, 74, 
	74, 1, 103, 109, 111, 23, 136, 10, 
	103, 103, 103, 108, 114, 108, 1, 103, 
	109, 111, 23, 136, 10, 103, 103, 103, 
	108, 108, 115, 1, 103, 109, 111, 23, 
	136, 10, 103, 103, 103, 108, 108, 108, 
	1, 103, 109, 111, 23, 136, 10, 103, 
	103, 103, 129, 108, 108, 1, 103, 109, 
	111, 23, 136, 10, 103, 103, 103, 126, 
	108, 108, 1, 103, 109, 111, 23, 138, 
	136, 10, 103, 103, 103, 129, 126, 108, 
	108, 1, 103, 109, 111, 23, 136, 10, 
	103, 103, 103, 126, 108, 108, 108, 1, 
	0
};

static const unsigned char _url_detector_trans_targs[] = {
	2, 0, 55, 75, 77, 76, 79, 3, 
	31, 4, 5, 6, 27, 29, 28, 8, 
	7, 14, 9, 10, 13, 109, 11, 110, 
	111, 112, 15, 23, 25, 24, 16, 17, 
	19, 21, 20, 18, 113, 114, 116, 115, 
	22, 26, 30, 32, 51, 53, 52, 34, 
	33, 38, 35, 36, 37, 118, 119, 39, 
	47, 49, 48, 40, 41, 43, 45, 44, 
	42, 120, 121, 123, 122, 46, 50, 54, 
	56, 62, 57, 58, 59, 61, 125, 126, 
	127, 63, 71, 73, 72, 64, 65, 67, 
	69, 68, 66, 128, 129, 131, 130, 70, 
	74, 78, 80, 81, 82, 83, 84, 85, 
	86, 105, 107, 106, 88, 87, 92, 89, 
	90, 91, 133, 134, 93, 101, 103, 102, 
	94, 95, 97, 99, 98, 96, 135, 136, 
	138, 137, 100, 104, 108, 12, 117, 124, 
	60, 132, 139
};

static const char _url_detector_trans_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0
};

static const char _url_detector_eof_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 2, 2, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1
};

static const int url_detector_start = 1;
static const int url_detector_first_final = 109;
static const int url_detector_error = 0;

static const int url_detector_en_main = 1;




url_detector::url_type url_detector::detect(string_piece str) {
  int cs;
  const char* p = str.str;
  const char* pe = str.str + str.len;

  url_type result = NO_URL;
  
	{
	cs = url_detector_start;
	}

	{
	int _klen;
	const char *_keys;
	int _trans;

	if ( p == pe )
		goto _test_eof;
	if ( cs == 0 )
		goto _out;
_resume:
	_keys = _url_detector_trans_keys + _url_detector_key_offsets[cs];
	_trans = _url_detector_index_offsets[cs];

	_klen = _url_detector_single_lengths[cs];
	if ( _klen > 0 ) {
		const char *_lower = _keys;
		const char *_mid;
		const char *_upper = _keys + _klen - 1;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + ((_upper-_lower) >> 1);
			if ( (*p) < *_mid )
				_upper = _mid - 1;
			else if ( (*p) > *_mid )
				_lower = _mid + 1;
			else {
				_trans += (unsigned int)(_mid - _keys);
				goto _match;
			}
		}
		_keys += _klen;
		_trans += _klen;
	}

	_klen = _url_detector_range_lengths[cs];
	if ( _klen > 0 ) {
		const char *_lower = _keys;
		const char *_mid;
		const char *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( (*p) < _mid[0] )
				_upper = _mid - 2;
			else if ( (*p) > _mid[1] )
				_lower = _mid + 2;
			else {
				_trans += (unsigned int)((_mid - _keys)>>1);
				goto _match;
			}
		}
		_trans += _klen;
	}

_match:
	_trans = _url_detector_indicies[_trans];
	cs = _url_detector_trans_targs[_trans];

	if ( cs == 0 )
		goto _out;
	if ( ++p != pe )
		goto _resume;
	_test_eof: {}
	if ( p == ( pe) )
	{
	switch ( _url_detector_eof_actions[cs] ) {
	case 1:
	{ result = URL; }
	break;
	case 2:
	{ result = URL; }
	{ result = EMAIL; }
	break;
	}
	}

	_out: {}
	}


  return result;
}

} // namespace nametag
} // namespace ufal
