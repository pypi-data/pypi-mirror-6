0.1: 	Geometry is OK (05/2011)
0.2: 	Azimuthal integration using cython histogramming is working (07/2011)
0.3: 	Azimuthal integration splits pixels like fit2d (11/2011)
0.4: 	Global clean up of the code regarding options from command line and better design
     	correct the orientation of the azimuthal angle chi
     	rename scripts in pyFAI-calib, pyFAI-saxs and pyFAI-waxs
0.5: 	include OpenCL version of azimuthal integration
0.6: 	OpenCL flavour works well on GPU in double precision with device selection (07/2012)
0.7: 	Implementation of look-up table based integration and OpenCL version of it
0.8:	Detector object is member of the geometry
		Binning of the detector, propagation to the spline if needed(10/2012)
		Detector object know about their masks. 
		Automatic mask for some detectors like Pilatus or XPad
		Implementation of sub-pixel position correction for Pilatus detectors 
 		LUT implementation in 1D & 2D (fully tested) both with OpenMP and with OpenCL
		Switch from C++/Cython OpenCL framework to PyOpenCL
		Port opencl code to both Windows 32/64 bits and MacOSX
		Add polarization corrections
		Use fast-CRC checksum on x86 using SSE4 (when available) to track array change on GPU buffers
		Support for flat 7*8 modules Xpad detectors.
		Benchmark with live graphics (still a memory issue with python2.6)
		Fat source distribution (python setup.py sdist --with-test-images) for debian
		Enhanced tests, especially for Saxs and OpenCL
		Recalibration tool for refining automatically parameters
		Enhancement of peak picking (much faster, recoded in pure Cython)
		Easy calibration for pixel detector (reconstruction of inter-module space)
		Error-bar generation using Poisson law
		Unified programming interface for all integration methods in 2theta, q or radius unit
		Graphical interface for azimuthal integration (pyFAI-integrate) 
		Lots of test to prevent non regression 
		Tool for merging images using various method (mean, median) and with outlayer rejection
		LImA plugin which can perform azimuthal integration live during the acquisition
		Distortion correction is available alone and as LImA plugin
		Recalibration can refine the wavelength in addition to 6 other parameters
		Calibration always done vs calibrant's ring number, lots of new calibrant are available
		Selection by hand of single peaks for calibration
		New detectors: Dexela and Perkin-Elmer flat panel
		Automatic refinement of multiple images at various geometries (for MX)
		Many improvements requested by ID11 and ID13  
0.9:	10/2013
        Add detector S140 from ImXpad, Titan from Agilent, Rayonix
        Fix issues: 61, 62, 68, 76, 81, 82, 85, 86, 87
        Enhancement in LImA plugins (better structure)
        IO module with Ascii/EDF/HDF5 writers 
        Switch some GUI to pyQtGraph in addition to Qt
        Correction for solid-angle formula  
0.9.2:  (01/2014)