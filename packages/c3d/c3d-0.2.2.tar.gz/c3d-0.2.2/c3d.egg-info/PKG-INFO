Metadata-Version: 1.1
Name: c3d
Version: 0.2.2
Summary: A library for manipulating C3D binary files
Home-page: http://github.com/EmbodiedCognition/py-c3d
Author: Leif Johnson
Author-email: leif@leifjohnson.net
License: MIT
Description: py-c3d
        ======
        
        This is a small library for reading and writing C3D binary files. C3D files are
        a standard format for recording 3-dimensional time sequence data, especially
        data recorded by a 3D motion tracking apparatus.
        
        Installing
        ----------
        
        Install with pip::
        
            pip install c3d
        
        Or if you'd like to use the bleeding-edge version, just clone the github
        repository and build and install using the normal Python setup process::
        
            git clone https://github.com/EmbodiedCognition/py-c3d
            cd py-c3d
            python setup.py install
        
        Usage
        -----
        
        Tools
        ~~~~~
        
        This package includes a script for converting C3D motion data to CSV format
        (``c3d2csv``) and an OpenGL-based visualization tool for observing the motion
        described by a C3D file (``c3d-viewer``).
        
        Library
        ~~~~~~~
        
        To use the C3D library, just import the package and create a ``Reader`` or
        ``Writer`` depending on your intended usage::
        
            import c3d
        
            with open('data.c3d', 'rb') as handle:
                reader = c3d.Reader(handle)
                for i, (points, analog) in enumerate(reader.read_frames()):
                    print('Frame {}: {}'.format(i, points.round(2)))
        
        You can also get and set metadata fields using the library; see the `package
        documentation`_ for more details.
        
        .. _package documentation: http://c3d.readthedocs.org
        
        Caveats
        -------
        
        This library is minimally effective, in the sense that the only motion tracking
        system I have access to (for testing) is a Phasespace system. If you try out the
        library and find that it doesn't work with your motion tracking system, let me
        know. Pull requests are also welcome!
        
        Also, if you're looking for more functionality than just reading and writing C3D
        files, there are a lot of better toolkits out there that support a lot more file
        formats and provide more functionality, perhaps at the cost of increased
        complexity. The `biomechanical toolkit`_ is a good package for analyzing motion
        data.
        
        .. _biomechanical toolkit: http://code.google.com/p/b-tk/
        
        License
        -------
        
        Distributed under the terms of the MIT license.
        
        Copyright (c) 2010 Leif Johnson <leif@leifjohnson.net>
        
        Permission is hereby granted, free of charge, to any person obtaining a copy of
        this software and associated documentation files (the "Software"), to deal in
        the Software without restriction, including without limitation the rights to
        use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
        the Software, and to permit persons to whom the Software is furnished to do so,
        subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
        FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
        COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
        IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
        CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
        
Keywords: c3d motion-capture
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Topic :: Scientific/Engineering
