#!/usr/bin/env python3

# http://inamidst.com/saxo/
# Created by Sean B. Palmer

import json
import saxo

def optflag(arg):
    flag = None
    if arg.startswith(":"):
        if " " in arg:
            flag, arg = arg.split(" ", 1)
        else:
            flag, arg = arg, ""
        flag = flag[1:]
    return flag, arg

# https://stackoverflow.com/questions/10823877
def flatten(container):
    for item in container:
        if isinstance(item, list):
            yield from flatten(item)
        else:
            yield item

def translate(text, source="auto", target=None):
    ua = "Mozilla/5.0 (X11; U; Linux i686) Gecko/20071127 Firefox/2.0.0.11"
    if target is None:
        target = "en"

    text = text.strip('" ')
    page = saxo.request(
        "http://translate.google.com/translate_a/t",
        headers={"User-Agent": ua},
        query = {
            "client": "t",
            "hl": "en",
            "sl": source,
            "tl": target,
            "multires": "1",
            "otf": "1",
            "ssel": "0",
            "tsel": "0",
            "uptl": "en",
            "sc": "1",
            "text": text
        })

    text = page["text"]
    while ",," in text:
        text = text.replace(",,", ",")
    text = text.replace("[,", "[")

    try: js = json.loads(text)
    except ValueError:
        return "Problem loading the JSON"

    js = list(flatten(js))
    source = js[4] if len(js) > 4 else "?"
    translation = js[0] if js else "?"
    return translation.replace(" ,", ","), source, target

@saxo.pipe
def tr(arg):
    if not arg:
        return "Translate text from one language to another"

    source, arg = optflag(arg)
    target, text = optflag(arg)

    translation, source, target = translate(text, source, target)

    t = translation[:-1] if translation.endswith(".") else translation
    msg = "%s (%s Â» %s). translate.google.com"
    return msg % (translation, source, target)
