.TH ANSIBLE.GITHUB_HOOKS 3 "2013-11-27" "1.4.1" "ANSIBLE MODULES"
.\" generated from library/source_control/github_hooks
.SH NAME
github_hooks \- Manages github service hooks.
.\" ------ DESCRIPTION
.SH DESCRIPTION
.PP
Adds service hooks and removes service hooks that have an error status. 
.\" ------ OPTIONS
.\"
.\"
.SH OPTIONS
   
.IP action
This tells the githooks module what you want it to do.
.IR Choices :
create,cleanall.(required)   
.IP hookurl
When creating a new hook, this is the url that you want github to post to. It is only required when creating a new hook.   
.IP oauthkey
The oauth key provided by github. It can be found/generated on github under "Edit Your Profile" >> "Applications" >> "Personal Access Tokens"(required)   
.IP repo
This is the API url for the repository you want to manage hooks for. It should be in the form of: https://api.github.com/repos/user:/repo:. Note this is different than the normal repo url.(required)   
.IP user
Github username.(required).\"
.\"
.\" ------ NOTES
.\"
.\"
.\" ------ EXAMPLES
.\" ------ PLAINEXAMPLES
.SH EXAMPLES
.nf
# Example creating a new service hook. It ignores duplicates.
- github_hooks: action=create hookurl=http://11.111.111.111:2222 user={{ gituser }} oauthkey={{ oauthkey }} repo=https://api.github.com/repos/pcgentry/Github-Auto-Deploy

# Cleaning all hooks for this repo that had an error on the last update. Since this works for all hooks in a repo it is probably best that this would be called from a handler.
- local_action: github_hooks action=cleanall user={{ gituser }} oauthkey={{ oauthkey }} repo={{ repo }}

.fi

.\" ------- AUTHOR
.SH AUTHOR
Phillip Gentry, CX Inc
.SH SEE ALSO
.IR ansible (1),
.I http://ansible.github.com/modules.html#github-hooks