map $host $web_domain {
    default '${primary-web-server-name}';
}

map $host $domain_for_cookie {
    default '${cookie-domain}';
}

server {
    listen ${port};
    server_name ${server-name};
    client_max_body_size 100m;
    gzip_types application/x-javascript text/css;

    # static resources
    location ^~ /media/ {
        alias   ${media-root}/;
        expires 31d;
    }

    # todo: use genshi template and for loop
    location ^~ /static/basic/ {
        alias   ${static-root-prefix}-basic-${static-root-suffix}/static/;
        expires 31d;
    }

    location ^~ /static/smart/ {
        alias   ${static-root-prefix}-smart-${static-root-suffix}/static/;
        expires 31d;
    }

    location ^~ /media/downloads/(.*) {
	    internal;
	    alias ${media-root}/${downloads-root}/$1;
    }

    location / {
        if ($args ~ showsite=web){
            add_header Set-Cookie "ua_map=web;Domain=$domain_for_cookie;Path=/;Max-Age=3600";
            rewrite ^/(.*)$ http://$web_domain/$1 last;
        }

        if ($args ~ showsite=mobi) {
            # Set explicitly to smart since deviceproxy is not wired in for
            # mobi.  If it were we would set this to ''.
            add_header Set-Cookie "ua_map=smart;Domain=$domain_for_cookie;Path=/;Max-Age=3600";
        }

        proxy_pass_header Server;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header X-Site-Type mobi;
        proxy_connect_timeout 10;
        proxy_read_timeout 10;
        proxy_pass http://${proxy-host}:${proxy-port}/;
        proxy_intercept_errors on;
        keepalive_timeout  0;

        proxy_ignore_headers Set-Cookie;
        proxy_cache mobi;
        proxy_cache_key $host$request_uri$is_args$args$cookie_is_authenticated;
        proxy_cache_valid 200 404 1m;
        proxy_cache_use_stale updating;
        proxy_cache_lock on;
        add_header X-Cached $upstream_cache_status;
    }

    error_page 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/www;
    }
    location = /50x.png {
        root /usr/share/nginx/www;
    }

    # logging
    access_log  ${log-prefix}.log rt_cache;
    error_log   ${log-prefix}-error.log;

}
