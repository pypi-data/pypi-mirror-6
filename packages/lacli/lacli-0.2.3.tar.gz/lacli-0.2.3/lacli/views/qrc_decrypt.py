# -*- coding: utf-8 -*-

# Resource object code
#
# Created: Mon Nov 11 13:59:39 2013
#      by: The Resource Compiler for PySide (Qt v4.8.5)
#
# WARNING! All changes made in this file will be lost!

from PySide import QtCore

qt_resource_data = "\x00\x00\x06\xdcimport QtQuick 1.1\x0d\x0aFocusScope {\x0d\x0a    id: focusScope\x0d\x0a    property int fontSize: 12\x0d\x0a    property int textBoxWidth: parent.width * 0.8\x0d\x0a    property int textBoxHeight: 45\x0d\x0a    property alias text: textInput.text\x0d\x0a    property alias acceptableInput: textInput.acceptableInput\x0d\x0a    property alias font: textInput.font\x0d\x0a    property alias inputMask: textInput.inputMask\x0d\x0a    signal textChanged(string text)\x0d\x0a    width: textBoxWidth\x0d\x0a    height: textBoxHeight\x0d\x0a\x0d\x0a    Rectangle {\x0d\x0a        width: parent.width\x0d\x0a        height: parent.height\x0d\x0a        color: \x22#d7d7d7\x22\x0d\x0a        border.color:\x22#000000\x22\x0d\x0a        border.width: 3\x0d\x0a        radius: 0\x0d\x0a        MouseArea {\x0d\x0a            anchors.fill: parent\x0d\x0a            onClicked: {\x0d\x0a                focusScope.focus = true\x0d\x0a                textInput.openSoftwareInputPanel()\x0d\x0a            }\x0d\x0a        }\x0d\x0a    }\x0d\x0a\x0d\x0a    MouseArea {\x0d\x0a        anchors.fill: parent\x0d\x0a        onClicked: {\x0d\x0a            focusScope.focus = true\x0d\x0a            textInput.openSoftwareInputPanel()\x0d\x0a        }\x0d\x0a    }\x0d\x0a\x0d\x0a    TextInput {\x0d\x0a        id: textInput\x0d\x0a        anchors {\x0d\x0a            right: parent.right\x0d\x0a            rightMargin: 8\x0d\x0a            verticalCenter: parent.verticalCenter\x0d\x0a        }\x0d\x0a        focus: true\x0d\x0a        selectByMouse: true\x0d\x0a        font.pointSize: fontSize\x0d\x0a        onTextChanged: focusScope.textChanged(text)\x0d\x0a        anchors.left: parent.left\x0d\x0a        anchors.leftMargin: 8\x0d\x0a    }\x0d\x0a\x0d\x0a    transitions: [\x0d\x0a        Transition {\x0d\x0a            from: ''; to: 'hasText'\x0d\x0a            NumberAnimation {\x0d\x0a                properties: 'opacity'\x0d\x0a            }\x0d\x0a        },\x0d\x0a        Transition {\x0d\x0a            from: 'hasText'; to: ''\x0d\x0a            NumberAnimation {\x0d\x0a                properties: 'opacity'\x0d\x0a            }\x0d\x0a        }\x0d\x0a    ]\x0d\x0a}\x0d\x0a\x00\x00\x05\xe5import QtQuick 1.1\x0d\x0aFocusScope {\x0d\x0a    width: row1.width\x0d\x0a    height: row1.height\x0d\x0a    Grid {\x0d\x0a        id: row1\x0d\x0a        columns: 2\x0d\x0a        rows: 1\x0d\x0a        spacing: 10\x0d\x0a        Rectangle {\x0d\x0a            x: 0\x0d\x0a            y: 0\x0d\x0a            width: text1.width + 10\x0d\x0a            height: text_input1.height+5\x0d\x0a            color: \x22#000000\x22\x0d\x0a            radius: 99\x0d\x0a            border.width: 1\x0d\x0a            border.color: \x22#000000\x22\x0d\x0a\x0d\x0a            Text {\x0d\x0a                id: text1\x0d\x0a                x: 8\x0d\x0a                y: 0\x0d\x0a                color: \x22#ffffff\x22\x0d\x0a\x0d\x0a                text: \x22A\x22\x0d\x0a                anchors.verticalCenterOffset: 0\x0d\x0a                anchors.horizontalCenterOffset: 0\x0d\x0a                anchors.topMargin: 0\x0d\x0a                anchors.horizontalCenter: parent.horizontalCenter\x0d\x0a                anchors.verticalCenter: parent.verticalCenter\x0d\x0a                anchors.top: parent.top\x0d\x0a                font.pointSize: 11\x0d\x0a                verticalAlignment: Text.AlignVCenter\x0d\x0a            }\x0d\x0a        }\x0d\x0a        Rectangle {\x0d\x0a            width: text_input1.width +5\x0d\x0a            height: text_input1.height+5\x0d\x0a            color: \x22#00000000\x22\x0d\x0a\x0d\x0a            Text {\x0d\x0a                id: text_input1\x0d\x0a                focus: true\x0d\x0a                anchors.horizontalCenter: parent.horizontalCenter\x0d\x0a                anchors.verticalCenter: parent.verticalCenter\x0d\x0a                font.pointSize: 12\x0d\x0a                font.family: \x22Consolas\x22\x0d\x0a                text: \x22your key id\x22\x0d\x0a\x0d\x0a            }\x0d\x0a        }\x0d\x0a    }\x0d\x0a}\x0d\x0a\x00\x00\x06\xe8import QtQuick 1.1\x0d\x0a\x0d\x0aRectangle {\x0d\x0a    id: button\x0d\x0a\x0d\x0a    property alias text: textItem.text\x0d\x0a    property bool enabled: false\x0d\x0a    property alias radius: button.radius\x0d\x0a    property alias font: textItem.font\x0d\x0a    signal buttonClicked()\x0d\x0a\x0d\x0a    width: textItem.width + 40; height: textItem.height + 10\x0d\x0a    border.width: 1\x0d\x0a    radius: height/4\x0d\x0a    smooth: true\x0d\x0a\x0d\x0a    gradient: Gradient {\x0d\x0a        GradientStop { id: topGrad; position: 0.0; color: \x22#333\x22 }\x0d\x0a        GradientStop { id: bottomGrad; position: 1.0; color: \x22#000\x22 }\x0d\x0a    }\x0d\x0a\x0d\x0a    Text {\x0d\x0a        id: textItem\x0d\x0a        x: parent.width/2 - width/2; y: parent.height/2 - height/2\x0d\x0a        font.pixelSize: 18\x0d\x0a        color: \x22black\x22\x0d\x0a        font.family: \x22Open Sans\x22\x0d\x0a        style: Text.Raised\x0d\x0a    }\x0d\x0a\x0d\x0a    MouseArea {\x0d\x0a        id: mouseArea\x0d\x0a        anchors.fill: parent\x0d\x0a        enabled: false\x0d\x0a    }\x0d\x0a\x0d\x0a    states: [\x0d\x0a    State {\x0d\x0a        name: \x22pressed\x22; when: mouseArea.pressed && mouseArea.containsMouse\x0d\x0a        PropertyChanges { target: topGrad; color: \x22white\x22 }\x0d\x0a        PropertyChanges { target: bottomGrad; color: \x22white\x22 }\x0d\x0a        PropertyChanges { target: textItem; x: textItem.x + 1; y: textItem.y + 1; font.family: \x22Open Sans\x22; explicit: true }\x0d\x0a        PropertyChanges { target: mouseArea; enabled: true; onClicked: button.buttonClicked() }\x0d\x0a    },\x0d\x0a    State {\x0d\x0a        name: \x22Enabled\x22\x0d\x0a        when: button.enabled\x0d\x0a        PropertyChanges { target: topGrad; position: 0; color: \x22white\x22 }\x0d\x0a        PropertyChanges { target: bottomGrad; position: 1; color: \x22white\x22 }\x0d\x0a        PropertyChanges { target: mouseArea; enabled: true; onClicked: button.buttonClicked() }\x0d\x0a\x0d\x0a        PropertyChanges {\x0d\x0a            target: textItem\x0d\x0a            font.family: \x22Open Sans\x22\x0d\x0a        }\x0d\x0a    }\x0d\x0a    ]\x0d\x0a}\x0d\x0a\x00\x00\x17Bimport QtQuick 1.1\x0d\x0a\x0d\x0a\x0d\x0aColumn {\x0d\x0a    id: keyinput\x0d\x0a    signal decrypt(string key, string path)\x0d\x0a    property bool hasError: false\x0d\x0a    transformOrigin: Item.Center\x0d\x0a\x0d\x0a    spacing: 20\x0d\x0a\x0d\x0a    ListModel {\x0d\x0a        id: mymodel\x0d\x0a        ListElement {\x0d\x0a            name: \x22B\x22\x0d\x0a            complete: false\x0d\x0a            value: \x22\x22\x0d\x0a        }\x0d\x0a        ListElement {\x0d\x0a            name: \x22C\x22\x0d\x0a            complete: false\x0d\x0a            value: \x22\x22\x0d\x0a        }\x0d\x0a        ListElement {\x0d\x0a            name: \x22D\x22\x0d\x0a            complete: false\x0d\x0a            value:\x22\x22\x0d\x0a        }\x0d\x0a        ListElement {\x0d\x0a            name: \x22E\x22\x0d\x0a            complete: false\x0d\x0a            value:\x22\x22\x0d\x0a        }\x0d\x0a    }\x0d\x0a\x0d\x0a    Component {\x0d\x0a        id: _error_msg\x0d\x0a        Column {\x0d\x0a            Text {\x0d\x0a                color: \x22#ff0000\x22\x0d\x0a                text: \x22Error\x22\x0d\x0a                anchors.right: parent.right\x0d\x0a                anchors.rightMargin: 0\x0d\x0a                font.pointSize: 15\x0d\x0a            }\x0d\x0a            Text {\x0d\x0a                color: \x22#992626\x22\x0d\x0a                text: \x22please try again\x22\x0d\x0a                font.pointSize: 9\x0d\x0a                font.family: \x22Open Sans\x22\x0d\x0a                verticalAlignment: Text.AlignVCenter\x0d\x0a            }\x0d\x0a        }\x0d\x0a    }\x0d\x0a\x0d\x0a    Row {\x0d\x0a        height: 1\x0d\x0a        anchors.right: parent.right\x0d\x0a        anchors.rightMargin: 0\x0d\x0a        anchors.left: parent.left\x0d\x0a        anchors.leftMargin: 0\x0d\x0a    }\x0d\x0a\x0d\x0a    Row {\x0d\x0a        anchors.horizontalCenter: parent.horizontalCenter\x0d\x0a        Text {\x0d\x0a            id: list_title\x0d\x0a            text: \x22Enter Certificate Key\x22\x0d\x0a            font.family: \x22Arial\x22\x0d\x0a            font.bold: true\x0d\x0a            font.pixelSize: 19\x0d\x0a            verticalAlignment: Text.AlignVCenter\x0d\x0a            horizontalAlignment: Text.AlignHCenter\x0d\x0a        }\x0d\x0a    }\x0d\x0a    Row {\x0d\x0a        id: key_row\x0d\x0a        Column {\x0d\x0a            id: column1\x0d\x0a            spacing: 10\x0d\x0a\x0d\x0a            Repeater {\x0d\x0a                id: list\x0d\x0a                focus: true\x0d\x0a                model: mymodel\x0d\x0a                onItemAdded: {\x0d\x0a                    if (!index) {\x0d\x0a                        item.forceActiveFocus()\x0d\x0a                    }\x0d\x0a                }\x0d\x0a\x0d\x0a                delegate: KeyRow {\x0d\x0a                    id: foo\x0d\x0a                    Connections {\x0d\x0a                        onAcceptableChanged: {\x0d\x0a                            mymodel.setProperty(index, 'complete', foo.acceptable)\x0d\x0a                            button1.rowComplete()\x0d\x0a                            if (foo.acceptable)\x0d\x0a                                if (index + 1 < list.count)\x0d\x0a                                    list.itemAt(index+1).forceActiveFocus()\x0d\x0a                                else\x0d\x0a                                    folder.forceActiveFocus()\x0d\x0a                                keyinput.hasError = false\x0d\x0a                        }\x0d\x0a\x0d\x0a                        onRowChanged: {\x0d\x0a                            mymodel.setProperty(index, 'value', val)\x0d\x0a                        }\x0d\x0a                    }\x0d\x0a                }\x0d\x0a            }\x0d\x0a        }\x0d\x0a    }\x0d\x0a    Row{\x0d\x0a        id: folder_row\x0d\x0a        anchors.right: parent.right\x0d\x0a        anchors.rightMargin: 10\x0d\x0a        layoutDirection: Qt.RightToLeft\x0d\x0a        spacing: 10\x0d\x0a\x0d\x0a\x0d\x0a        Button {\x0d\x0a            id: button2\x0d\x0a            text: \x22Browse\x22\x0d\x0a            enabled: true\x0d\x0a            Connections {\x0d\x0a                onButtonClicked: folder.text = destsel.getDirectory()\x0d\x0a            }\x0d\x0a            font.pixelSize: 10\x0d\x0a            radius: 0\x0d\x0a        }\x0d\x0a\x0d\x0a        TextBox {\x0d\x0a            id: folder\x0d\x0a            anchors.verticalCenter: parent.verticalCenter\x0d\x0a            fontSize: 12\x0d\x0a            textBoxHeight: 20\x0d\x0a            textBoxWidth: 150\x0d\x0a            focus: true\x0d\x0a            font.pointSize: 12\x0d\x0a            Connections {\x0d\x0a                onTextChanged: button1.folderChanged()\x0d\x0a            }\x0d\x0a\x0d\x0a        }\x0d\x0a\x0d\x0a        Rectangle {\x0d\x0a            id: rectangle1\x0d\x0a            width: childrenRect.width\x0d\x0a            height: childrenRect.height\x0d\x0a            color: \x22#ffffff\x22\x0d\x0a            anchors.verticalCenter: parent.verticalCenter\x0d\x0a            z: -2\x0d\x0a\x0d\x0a            Text {\x0d\x0a                id: text1\x0d\x0a                text: qsTr(\x22Folder:\x22)\x0d\x0a                font.pointSize: 12\x0d\x0a            }\x0d\x0a        }\x0d\x0a    }\x0d\x0a\x0d\x0a\x0d\x0a    Row {\x0d\x0a        id: button_row\x0d\x0a        layoutDirection: Qt.RightToLeft\x0d\x0a        anchors.right: parent.right\x0d\x0a        anchors.rightMargin: 10\x0d\x0a        anchors.left: parent.left\x0d\x0a        anchors.leftMargin: 10\x0d\x0a        spacing: 10\x0d\x0a        Button {\x0d\x0a            id: button1\x0d\x0a            text: \x22Decrypt\x22\x0d\x0a            signal rowComplete()\x0d\x0a            signal folderChanged()\x0d\x0a            onRowComplete: {\x0d\x0a                enabled = destsel.dirExists(folder.text)\x0d\x0a                for (var i=0; i< mymodel.count; i++) {\x0d\x0a                    if (!mymodel.get(i).complete)\x0d\x0a                        enabled = false\x0d\x0a                }\x0d\x0a            }\x0d\x0a            onFolderChanged: {\x0d\x0a                if (destsel.dirExists(folder.text))\x0d\x0a                    rowComplete()\x0d\x0a            }\x0d\x0a\x0d\x0a            onButtonClicked: {\x0d\x0a                var key=''\x0d\x0a                for (var i=0; i<list.model.count; i++)\x0d\x0a                    key += list.model.get(i).value\x0d\x0a                keyinput.decrypt(key, folder.text)\x0d\x0a                if(!keyinput.hasError)\x0d\x0a                    Qt.quit()\x0d\x0a            }\x0d\x0a        }\x0d\x0a        Button {\x0d\x0a            id: button3\x0d\x0a            text: \x22Cancel\x22\x0d\x0a            enabled: true\x0d\x0a            onButtonClicked: Qt.quit()\x0d\x0a        }\x0d\x0a        Loader {\x0d\x0a            sourceComponent: _error_msg\x0d\x0a            id: error\x0d\x0a            opacity: 0\x0d\x0a        }\x0d\x0a    }\x0d\x0a\x0d\x0a    Row {\x0d\x0a        height: 1\x0d\x0a        anchors.right: parent.right\x0d\x0a        anchors.rightMargin: 0\x0d\x0a        anchors.left: parent.left\x0d\x0a        anchors.leftMargin: 0\x0d\x0a    }\x0d\x0a    states: [\x0d\x0a        State {\x0d\x0a            when: keyinput.hasError\x0d\x0a            PropertyChanges {\x0d\x0a                target: error\x0d\x0a                opacity: 1\x0d\x0a            }\x0d\x0a        }\x0d\x0a    ]\x0d\x0a\x0d\x0a}\x0d\x0a\x0d\x0a\x00\x00\x08\x92import QtQuick 1.1\x0d\x0a\x0d\x0a\x0d\x0aFocusScope {\x0d\x0a    id: rect\x0d\x0a    property bool complete: false\x0d\x0a    property bool acceptable: textbox.acceptableInput\x0d\x0a    signal rowChanged(string val)\x0d\x0a    width: childrenRect.width\x0d\x0a    height: childrenRect.height\x0d\x0a\x0d\x0a    Row {\x0d\x0a        id: row1\x0d\x0a        layoutDirection: Qt.RightToLeft\x0d\x0a        spacing: 0\x0d\x0a\x0d\x0a        Rectangle {\x0d\x0a            width: 10\x0d\x0a            height: textbox.height\x0d\x0a            color: \x22#ffffff\x22\x0d\x0a        }\x0d\x0a        TextBox {\x0d\x0a            id: textbox\x0d\x0a            fontSize: text_proto.font.pointSize\x0d\x0a            textBoxHeight: text_proto.height\x0d\x0a            textBoxWidth: text_proto.width + 16\x0d\x0a            focus: true\x0d\x0a            font: text_proto.font\x0d\x0a            inputMask: \x22HH HH HH HH . HH HH HH HH\x22\x0d\x0a            Connections {\x0d\x0a                onTextChanged: rect.rowChanged(text.replace(/[ .]/g, ''))\x0d\x0a            }\x0d\x0a        }\x0d\x0a\x0d\x0a        Rectangle {\x0d\x0a            width: 10\x0d\x0a            height: textbox.height\x0d\x0a            color: \x22#ffffff\x22\x0d\x0a        }\x0d\x0a        Rectangle {\x0d\x0a            width: 30\x0d\x0a            color: \x22#ffffff\x22\x0d\x0a            anchors.bottom: parent.bottom\x0d\x0a            anchors.bottomMargin: 0\x0d\x0a            anchors.top: parent.top\x0d\x0a            anchors.topMargin: 0\x0d\x0a\x0d\x0a            Rectangle {\x0d\x0a                width: text1.width + 10\x0d\x0a                height: 20\x0d\x0a                color: \x22#000000\x22\x0d\x0a                anchors.verticalCenter: parent.verticalCenter\x0d\x0a                anchors.horizontalCenter: parent.horizontalCenter\x0d\x0a\x0d\x0a                Text {\x0d\x0a                    id: text1\x0d\x0a                    color: \x22#ffffff\x22\x0d\x0a                    text: name\x0d\x0a                    anchors.horizontalCenter: parent.horizontalCenter\x0d\x0a                    font.pixelSize: 15\x0d\x0a                    transformOrigin: Item.Center\x0d\x0a                    anchors.verticalCenter: parent.verticalCenter\x0d\x0a                    verticalAlignment: Text.AlignVCenter\x0d\x0a                }\x0d\x0a            }\x0d\x0a        }\x0d\x0a    }\x0d\x0a\x0d\x0a    TextInput {\x0d\x0a        id: text_proto\x0d\x0a        visible: false\x0d\x0a        font.pointSize: 15\x0d\x0a        font.family: \x22Consolas\x22\x0d\x0a        font.capitalization: Font.AllUppercase\x0d\x0a        text: qsTr(\x22ff ff ff ff . ff ff ff ff\x22)\x0d\x0a\x0d\x0a    }\x0d\x0a}\x0d\x0a"
qt_resource_name = "\x00\x02\x00\x00\x07\xb9\x00u\x00i\x00\x0b\x09\xde\xcb<\x00T\x00e\x00x\x00t\x00B\x00o\x00x\x00.\x00q\x00m\x00l\x00\x09\x09j\xcb\x1c\x00I\x00d\x00R\x00o\x00w\x00.\x00q\x00m\x00l\x00\x0a\x0bhq\x5c\x00B\x00u\x00t\x00t\x00o\x00n\x00.\x00q\x00m\x00l\x00\x0c\x0d\xfe\x98\x9c\x00K\x00e\x00y\x00I\x00n\x00p\x00u\x00t\x00.\x00q\x00m\x00l\x00\x0a\x09dq\xfc\x00K\x00e\x00y\x00R\x00o\x00w\x00.\x00q\x00m\x00l"
qt_resource_struct = "\x00\x00\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x02\x00\x00\x00\x05\x00\x00\x00\x02\x00\x00\x00v\x00\x00\x00\x00\x00\x01\x00\x00*\xfb\x00\x00\x00&\x00\x00\x00\x00\x00\x01\x00\x00\x06\xe0\x00\x00\x00\x0a\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00>\x00\x00\x00\x00\x00\x01\x00\x00\x0c\xc9\x00\x00\x00X\x00\x00\x00\x00\x00\x01\x00\x00\x13\xb5"
def qInitResources():
    QtCore.qRegisterResourceData(0x01, qt_resource_struct, qt_resource_name, qt_resource_data)

def qCleanupResources():
    QtCore.qUnregisterResourceData(0x01, qt_resource_struct, qt_resource_name, qt_resource_data)

qInitResources()
